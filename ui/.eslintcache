[{"D:\\Sem-9_Project_Movie\\ui\\src\\index.js":"1","D:\\Sem-9_Project_Movie\\ui\\src\\reportWebVitals.js":"2","D:\\Sem-9_Project_Movie\\ui\\src\\App.js":"3","D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\stateReducer.js":"4","D:\\Sem-9_Project_Movie\\ui\\src\\stateTask.js":"5","D:\\Sem-9_Project_Movie\\ui\\src\\store\\actionTypes.js":"6","D:\\Sem-9_Project_Movie\\ui\\src\\components\\common\\Header.js":"7","D:\\Sem-9_Project_Movie\\ui\\src\\components\\State_All_Form\\stateList.js":"8","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\stateAction.js":"9","D:\\Sem-9_Project_Movie\\ui\\src\\components\\State_All_Form\\addForm.js":"10","D:\\Sem-9_Project_Movie\\ui\\src\\components\\common\\Footer.js":"11","D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\cityReducer.js":"12","D:\\Sem-9_Project_Movie\\ui\\src\\store\\cityActionTypes.js":"13","D:\\Sem-9_Project_Movie\\ui\\src\\components\\City_All_Form\\cityList.js":"14","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\cityAction.js":"15","D:\\Sem-9_Project_Movie\\ui\\src\\components\\City_All_Form\\addForm.js":"16","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\userRegistration.js":"17","D:\\Sem-9_Project_Movie\\ui\\src\\registerTask.js":"18","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\theaterRegistration.js":"19","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\userAction.js":"20","D:\\Sem-9_Project_Movie\\ui\\src\\store\\userActionTypes.js":"21"},{"size":1026,"mtime":1607051332643,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":311,"mtime":1607220884874,"results":"25","hashOfConfig":"23"},{"size":3671,"mtime":1607142002442,"results":"26","hashOfConfig":"23"},{"size":849,"mtime":1607222485368,"results":"27","hashOfConfig":"23"},{"size":876,"mtime":1607050245559,"results":"28","hashOfConfig":"23"},{"size":886,"mtime":1607222300717,"results":"29","hashOfConfig":"23"},{"size":7035,"mtime":1607222275656,"results":"30","hashOfConfig":"23"},{"size":3024,"mtime":1607049187488,"results":"31","hashOfConfig":"23"},{"size":3502,"mtime":1606967661965,"results":"32","hashOfConfig":"23"},{"size":298,"mtime":1606906342616,"results":"33","hashOfConfig":"23"},{"size":4284,"mtime":1607229256693,"results":"34","hashOfConfig":"23"},{"size":1130,"mtime":1607229197585,"results":"35","hashOfConfig":"23"},{"size":7691,"mtime":1607141969930,"results":"36","hashOfConfig":"23"},{"size":3653,"mtime":1607230581010,"results":"37","hashOfConfig":"23"},{"size":7082,"mtime":1607080123136,"results":"38","hashOfConfig":"23"},{"size":10972,"mtime":1607244199445,"results":"39","hashOfConfig":"23"},{"size":885,"mtime":1607222424143,"results":"40","hashOfConfig":"23"},{"size":10772,"mtime":1607244421440,"results":"41","hashOfConfig":"23"},{"size":3152,"mtime":1607243970483,"results":"42","hashOfConfig":"23"},{"size":812,"mtime":1607224742771,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"2xmmj7",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Sem-9_Project_Movie\\ui\\src\\index.js",[],["94","95"],"D:\\Sem-9_Project_Movie\\ui\\src\\reportWebVitals.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\App.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\stateReducer.js",["96"],"import * as actionTypes from \"../actionTypes\";\r\nconst initalstore ={\r\n    states:[],\r\n    singlestate:{},\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nconst store = (state = initalstore,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.INIT_FETCH_STATES:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n            }\r\n        case actionTypes.FETCH_STATES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                states:action.states\r\n            }\r\n\r\n        case actionTypes.FETCH_STATES_FAILED:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:action.error,\r\n            }\r\n        case actionTypes.INIT_ADD_STATES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.ADD_STATES_SUCCESS:\r\n\r\n                return{\r\n                    ...state,\r\n                    loading:false                  \r\n                }\r\n        case actionTypes.ADD_STATES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_DELETE_STATES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n    \r\n                    };\r\n        case actionTypes.DELETE_STATES_SUCCESS:\r\n                let statees = state.states.filter(statese => statese._id !== action.id);\r\n                // let studentst = state.states.filter(student => student._id !== action.id);\r\n                return{\r\n                    ...state,\r\n                    loading:false,   \r\n                    states:statees,\r\n                }\r\n        case actionTypes.DELETE_STATES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_SINGLE_STATES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,    \r\n                    };\r\n        case actionTypes.SINGLE_STATES_SUCCESS:\r\n            console.log(action.singlestate)\r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    singlestate:action.singlestate             \r\n                }\r\n        case actionTypes.SINGLE_STATES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_UPDATE_STATES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.UPDATE_STATES_SUCCESS:\r\n            let statesst = [...state.states];\r\n            statesst.map(order => {\r\n                if(order._id === action.states._id)\r\n                {\r\n                    order.state_name = action.states.state_name                    \r\n                }\r\n            });\r\n            // console.log(action.singlestates);\r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    states:statesst             \r\n                }\r\n        case actionTypes.UPDATE_STATES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n            default :\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default store;","D:\\Sem-9_Project_Movie\\ui\\src\\stateTask.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\actionTypes.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\common\\Header.js",["97","98"],"import React from 'react';\r\nimport {Navbar,Nav, Card,Tab} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Image from 'react-bootstrap/Image'\r\nimport Logo from '../../Movie_logo/logo1.png'\r\n\r\n\r\nconst Header = (props) => {\r\n    return <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Image src={Logo} style={{height: \"60px\",width: \"60px\"}}/>        \r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/state\" style={{marginTop: \"20px\",fontSize: \"19px\",marginLeft: \"56px\"}}>State</Nav.Link>\r\n        </Nav>\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/city\" style={{marginTop: \"20px\",fontSize: \"19px\",marginRight: \"1044px\"}} >City</Nav.Link>\r\n        </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n}\r\n\r\nexport default Header;","D:\\Sem-9_Project_Movie\\ui\\src\\components\\State_All_Form\\stateList.js",["99"],"import React,{useState,useEffect} from 'react';\r\nimport {Button,Card,Table,Modal,Form, Spinner }from 'react-bootstrap';\r\nimport {fetchstatedata,deletestatedata,updatestatedata,singlestateDataFetch} from '../../store/action/stateAction';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { BiPlusMedical,BiSearch } from 'react-icons/bi';\r\nimport { FiAlignJustify } from \"react-icons/fi\";\r\nimport '../state.css';\r\n\r\nconst StateList = (props) => {\r\n  // console.log(props.singlestate);\r\n  const [obj,setMyObj1]= useState({\r\n    _id:\"\",\r\n    state_name:\"\",\r\n  })\r\n  \r\n  const [ids,setIds] = useState(\"\");\r\n  \r\n  useEffect(()=>{    \r\n    props.fetchstatedata();\r\n  },[props.fetchstatedata])\r\n  \r\nconst deleteHandler = async (id) =>{\r\n  await props.deletestatedata(id);\r\n  setShow(false);\r\n}\r\n\r\nconst SingleSubmit = async () =>{\r\n  await props.updatestatedata(obj._id,obj);\r\n  console.log(obj);\r\n  usetShow(false);\r\n  // obj._id=props.singlestate._id;\r\n  obj.state_name=\"\";\r\n  props.singlestate.state_name=\"\";\r\n  // setMyObj1(obj);\r\n}\r\n\r\nconst [show, setShow] = useState(false);\r\nconst [ushow, usetShow] = useState(false);\r\n\r\nconst handleClose = () => setShow(false);\r\nconst handleShow = (id) => {setShow(true);\r\n  setIds(id);\r\n}\r\n\r\nconst SingleClose = () => { \r\n  obj.state_name=\"\";\r\n  usetShow(false) \r\n};\r\n\r\nif(props.singlestate.state_name && !obj.state_name){\r\n  obj.state_name=props.singlestate.state_name;\r\n  obj._id=props.singlestate._id;\r\n  // setMyObj1()\r\n  console.log(obj);\r\n}\r\nconst handleUpdate = async (_id) => {\r\n  await props.singlestateDataFetch(_id); \r\n  usetShow(true);\r\n}\r\n\r\n  const renderTableData = () => {\r\n    return props.states.map((stateslist, index) => {\r\n        \r\n       const { _id, state_name } = stateslist\r\n       return (\r\n          <tr key={_id}>\r\n             <td>{index+1}</td>\r\n             <td>{state_name}</td>\r\n             <td><Button onClick={() => handleUpdate(_id)} >UPDATE</Button></td>\r\n             <td><Button variant=\"danger\" onClick={() => handleShow(_id)} >Delete</Button></td>\r\n          </tr>\r\n       )\r\n    })\r\n }\r\n const HandleChange = (e,name) =>{\r\n  let olddata = {...obj};\r\n  olddata[name] = e.target.value;\r\n  setMyObj1(olddata);\r\n}\r\n\r\n  return (\r\n    <>\r\n            <Card style={{  }}>\r\n                <Card.Header className={\"Header\"}>\r\n                <div className={\"Title\"}>\r\n                    State List\r\n                </div>\r\n                <div className=\"input-group\" style={{ maxWidth: \"400px\" }}>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"State Name\" />\r\n                        <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            <Button variant=\"outline-success\" ><BiSearch/></Button>\r\n                            <Button variant=\"outline-secondary\"><FiAlignJustify/></Button>\r\n                            <Button as={Link} to=\"/state/stateAdd\" variant=\"outline-primary\"><BiPlusMedical/></Button>\r\n                        </div>\r\n                    </div>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>State Name</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                        {(props.Loading) ? <Spinner animation=\"border\" role=\"status\">\r\n                              <span className=\"sr-only\">Loading...</span>\r\n                            </Spinner> : renderTableData()}\r\n                            \r\n                        </tbody>\r\n                    </Table>               \r\n                </Card.Body>\r\n            </Card>\r\n\r\n          {/* Update Record */}\r\n          <Modal  show={ushow} onHide={SingleClose}>\r\n          <Card bg=\"Light\" text='dark' >\r\n              <Modal.Header closeButton style={{ backgroundColor: \"#344c63\",color: \"white\"}}>\r\n                \r\n                  <Card.Title>Update State</Card.Title>\r\n                \r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                \r\n                <Card.Body>\r\n                        <Card.Text>\r\n                        <Form>\r\n                          <Form.Group>\r\n                              <Form.Label style={{marginBottom:\"1.5rem\",fontFamily: \"emoji\"}}>Enter State Name:-</Form.Label>\r\n                              <Form.Control type=\"hidden\" name=\"_id\" value={obj._id} onChange={(e) => HandleChange(e,\"_id\")} placeholder=\"Enter state name ...\" />\r\n                              <Form.Control type=\"text\" style={{backgroundColor: \"#e2e2e2\",color: \"#463334\"}} name=\"state_name\"  value={obj.state_name} onChange={(e) => HandleChange(e,\"state_name\")}  placeholder=\"Enter state name ...\" />\r\n                          </Form.Group>\r\n                      </Form>\r\n                        </Card.Text>\r\n                </Card.Body>\r\n              </Modal.Body>\r\n\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={()=>SingleSubmit()}>update</Button>\r\n              </Modal.Footer>\r\n            </Card>\r\n            </Modal>\r\n            \r\n            {/* Delete Record  */}\r\n            <Modal  show={show} onHide={handleClose} style={{paddingTop:\"156px\"}}>\r\n            <Card bg=\"Light\" text='dark' >\r\n                  <Modal.Header closeButton style={{ backgroundColor: \"#344c63\",color: \"white\"}}>\r\n                    {/* <Card.Body > */}\r\n                        <Card.Title><b>Are you sure!</b></Card.Title>\r\n                    {/* </Card.Body> */}\r\n                  </Modal.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                            Do you want to delete this state?\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                        <Modal.Footer>\r\n                          <Button variant=\"danger\"  onClick={() => deleteHandler(ids)}>Delete</Button>\r\n                          <Button variant=\"secondary\"  onClick={handleClose} style={{    marginLeft: \"17px\"}}>Cancel</Button>\r\n                        </Modal.Footer>\r\n                    \r\n                </Card>\r\n            </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps =  (state) => ({\r\n  err:state.stateReducer.error,\r\n  Loading:state.stateReducer.loading,\r\n  states:state.stateReducer.states,\r\n  singlestate:state.stateReducer.singlestate,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    fetchstatedata:()=>dispatch(fetchstatedata()),\r\n    deletestatedata:(_id)=>dispatch(deletestatedata(_id)),\r\n    updatestatedata:(postdata,put) => dispatch(updatestatedata(postdata,put)),\r\n    singlestateDataFetch:(id)=>dispatch(singlestateDataFetch(id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(StateList);\r\n","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\stateAction.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\State_All_Form\\addForm.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\common\\Footer.js",[],["100","101"],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\cityReducer.js",["102"],"import * as actionTypes from \"../cityActionTypes\";\r\nconst initalstore ={\r\n    cities:[],\r\n    singlecities:{},\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nconst store = (state = initalstore,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.INIT_FETCH_CITIES:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n            }\r\n        case actionTypes.FETCH_CITIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                cities:action.cities\r\n            }\r\n\r\n        case actionTypes.FETCH_CITIES_FAILED:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:action.error,\r\n            }\r\n        case actionTypes.INIT_ADD_CITIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.ADD_CITIES_SUCCESS:\r\n\r\n                return{\r\n                    ...state,\r\n                    loading:false                  \r\n                }\r\n        case actionTypes.ADD_CITIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_DELETE_CITIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n    \r\n                    };\r\n        case actionTypes.DELETE_CITIES_SUCCESS:\r\n                let citiest = state.cities.filter(statese => statese._id !== action.id);\r\n                // let studentst = state.states.filter(student => student._id !== action.id);\r\n                return{\r\n                    ...state,\r\n                    loading:false,   \r\n                    cities:citiest,\r\n                }\r\n        case actionTypes.DELETE_CITIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_SINGLE_CITIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,    \r\n                    };\r\n        case actionTypes.SINGLE_CITIES_SUCCESS:\r\n            // console.log(ac)\r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    singlecities:action.singlecities             \r\n                }\r\n        case actionTypes.SINGLE_CITIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_UPDATE_CITIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.UPDATE_CITIES_SUCCESS:\r\n                let statesst = [...state.cities];\r\n                statesst.map(order => {\r\n                    if(order._id === action.cities._id)\r\n                    {\r\n                        order.city_name = action.cities.city_name\r\n                        order.state_id = action.cities.state_id;\r\n                    }\r\n                });  \r\n                // console.log(action.cities.state_id);          \r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    cities:statesst\r\n                }\r\n        case actionTypes.UPDATE_CITIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_FETCHSTATESBYCITYID_CITIES:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n            }\r\n        case actionTypes.FETCHSTATESBYCITYID_CITIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                cities:action.cities\r\n            }\r\n        case actionTypes.FETCHSTATESBYCITYID_CITIES_FAILED:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:action.error,\r\n            }\r\n            default :\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default store;","D:\\Sem-9_Project_Movie\\ui\\src\\store\\cityActionTypes.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\City_All_Form\\cityList.js",["103","104","105"],"import React,{useState,useEffect} from 'react';\r\nimport {Button,Card,Table,Modal,Form, CardGroup,Row,Col }from 'react-bootstrap';\r\nimport {fetchcitiesdata,deletecitiesdata,updatecitiesdata,singlecitiesDataFetch} from '../../store/action/cityAction';\r\nimport {fetchstatedata} from '../../store/action/stateAction';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { BiPlusMedical,BiSearch } from 'react-icons/bi';\r\nimport { FiAlignJustify } from \"react-icons/fi\";\r\nimport '../state.css';\r\n\r\n\r\nconst CityList = (props) => {\r\n  const [obj,setMyObj1]= useState({\r\n    _id:\"\",\r\n    city_name:\"\",\r\n    state_id:\"\"\r\n  })\r\n  \r\n  const [ids,setIds] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [ushow, usetShow] = useState(false);\r\n  \r\n   useEffect(()=>{    \r\n    props.fetchcitiesdata();\r\n    props.fetchstatedata();\r\n  },[props.fetchcitiesdata,props.fetchstatedata])\r\n  \r\n  const deleteHandler = async (id) =>{\r\n    await props.deletecitiesdata(id);\r\n    setShow(false);\r\n  }\r\n\r\nconst SingleSubmit = async () =>{\r\n  await props.updatecitiesdata(obj._id,obj);\r\n  usetShow(false);\r\n  obj._id=props.singlecities._id;\r\n  obj.city_name=\"\";\r\n}\r\n\r\n\r\nconst handleClose = () => setShow(false);\r\nconst handleShow = (id) => {setShow(true);\r\n  setIds(id);\r\n}\r\n\r\nconst SingleClose = () => { \r\n  obj.city_name=\"\";\r\n  usetShow(false) \r\n};\r\n\r\nif(props.singlecities.city_name && !obj.city_name){\r\n  setMyObj1(props.singlecities)\r\n}\r\nconst handleUpdate = async (_id) => {\r\n  await props.singlecitiesDataFetch(_id); \r\n  usetShow(true);\r\n}\r\n\r\n  const renderTableData = () => {\r\n    return props.cities.map((citieslist, index) => {\r\n        // console.log(citieslist);\r\n       const { _id, city_name,state_id } = citieslist\r\n       return (\r\n          <tr key={_id}>\r\n             <td>{index+1}</td>\r\n             <td>{city_name}</td>\r\n             <td>{state_id.state_name}</td>\r\n             <td><Button onClick={() => handleUpdate(_id)}>UPDATE</Button></td>\r\n             <td><Button variant=\"danger\" onClick={() => handleShow(_id)}>Delete</Button></td>\r\n          </tr>\r\n       )\r\n    })\r\n }\r\n const HandleChange = (e,name) =>{\r\n  let olddata = {...obj};\r\n  olddata[name] = e.target.value;\r\n  setMyObj1(olddata);\r\n}\r\nconst optionTemplate = () => {\r\n  // console.log(props.states);\r\n  return props.states.map((stateslist) => {\r\n  const { _id, state_name } = stateslist;\r\n  if(!obj.state_id){\r\n    obj.state_id=_id;\r\n    setMyObj1(obj);\r\n}\r\n  return (\r\n      <option value={_id} key={_id}>{state_name}</option>\r\n   )\r\n  })\r\n\r\n}\r\n  return (\r\n    <>\r\n            <Card style={{  }}>\r\n                <Card.Header className={\"Header\"}>\r\n                <div className={\"Title\"}>\r\n                    State List\r\n                </div>\r\n                <div className=\"input-group\" style={{ maxWidth: \"400px\" }}>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"State Name\" />\r\n                        <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            <Button variant=\"outline-success\" ><BiSearch/></Button>\r\n                            <Button variant=\"outline-secondary\"><FiAlignJustify/></Button>\r\n                            <Button as={Link} to=\"/city/cityAdd\" variant=\"outline-primary\"><BiPlusMedical/></Button>\r\n                        </div>\r\n                    </div>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>City Name</th>\r\n                                <th>State Name</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderTableData()}\r\n                        </tbody>\r\n                    </Table>               \r\n                </Card.Body>\r\n            </Card>\r\n\r\n            {/* Update Record */}\r\n          <Modal  show={ushow} onHide={SingleClose}>\r\n          <Card bg=\"Light\" text='dark' >\r\n              <Modal.Header closeButton style={{ backgroundColor: \"#344c63\",color: \"white\"}}>\r\n                  <Card.Title>Update City</Card.Title>                \r\n              </Modal.Header>\r\n\r\n              <Modal.Body>                \r\n                <Card.Body>\r\n                        <Card.Text>\r\n                        <Form>\r\n                          <Form.Group>\r\n                              <Form.Label style={{marginBottom:\"1.5rem\",fontFamily: \"emoji\"}}>Enter City Name:-</Form.Label>\r\n                              <Form.Control type=\"hidden\" name=\"_id\" value={obj._id} onChange={(e) => HandleChange(e,\"_id\")} />\r\n                              <Form.Control type=\"text\" style={{backgroundColor: \"#e2e2e2\",color: \"#463334\"}} name=\"city_name\"  value={obj.city_name} onChange={(e) => HandleChange(e,\"city_name\")}  placeholder=\"Enter city name ...\" />\r\n                          </Form.Group>\r\n                          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                              <Form.Label style={{marginBottom:\"1.5rem\",fontFamily: \"emoji\"}}>\r\n                                  Select State :-\r\n                              </Form.Label>\r\n                              \r\n                                  <Form.Control as=\"select\" name=\"state_id\" value={obj.state_id} onChange={(e) => {HandleChange(e,\"state_id\")}} >\r\n                                      {optionTemplate()}\r\n                                  </Form.Control>\r\n                              \r\n                          </Form.Group>\r\n                      </Form>\r\n                        </Card.Text>\r\n                </Card.Body>\r\n              </Modal.Body>\r\n\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={()=>SingleSubmit()}>update</Button>\r\n              </Modal.Footer>\r\n            </Card>\r\n            </Modal>\r\n        \r\n            {/* Delete Record  */}\r\n            <Modal  show={show} onHide={handleClose} style={{paddingTop:\"156px\"}}>\r\n                <Card bg=\"Light\" text='dark' >\r\n                    <Modal.Header closeButton style={{ backgroundColor: \"#344c63\",color: \"white\"}}>\r\n                          <Card.Title><b>Are you sure!</b></Card.Title>\r\n                    </Modal.Header>\r\n                    <Card.Body>\r\n                    <Card.Text>\r\n                        Do you want to delete this city?\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    <Modal.Footer>\r\n                      <Button variant=\"danger\"  onClick={() => deleteHandler(ids)}>Delete</Button>\r\n                      <Button variant=\"secondary\"  onClick={handleClose} style={{    marginLeft: \"17px\"}}>Cancel</Button>\r\n                    </Modal.Footer>        \r\n                </Card>\r\n            </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps =  (state) => ({\r\n  err:state.cityReducer.error,\r\n  cities:state.cityReducer.cities,\r\n  states:state.stateReducer.states,\r\n  singlecities:state.cityReducer.singlecities\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    fetchstatedata:()=>dispatch(fetchstatedata()),\r\n    fetchcitiesdata:()=>dispatch(fetchcitiesdata()),\r\n    deletecitiesdata:(_id)=>dispatch(deletecitiesdata(_id)),\r\n    updatecitiesdata:(postdata,put) => dispatch(updatecitiesdata(postdata,put)),\r\n    singlecitiesDataFetch:(id)=>dispatch(singlecitiesDataFetch(id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CityList);\r\n","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\cityAction.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\City_All_Form\\addForm.js",["106","107","108","109","110","111"],"import React,{useState,useEffect} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Row,Col,Modal,CardGroup} from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {addcitiesdata} from '../../store/action/cityAction';\r\nimport {fetchstatedata} from '../../store/action/stateAction';\r\nimport {connect} from 'react-redux';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Logo from '../../Movie_logo/logo1.png';\r\nimport Logo1 from '../../Movie_logo/logo1.jpg'\r\n\r\nfunction ControlledCarousel() {\r\n    const [index, setIndex] = useState(0);\r\n  \r\n    const handleSelect = (selectedIndex, e) => {\r\n      setIndex(selectedIndex);\r\n    };\r\n  \r\n    return (\r\n      <Carousel activeIndex={index} onSelect={handleSelect}>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={Logo1}\r\n            alt=\"First slide\"\r\n            height=\"300px\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>First slide label</h3>\r\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={Logo}\r\n            alt=\"Second slide\"\r\n            height=\"300px\"\r\n          />\r\n  \r\n          <Carousel.Caption>\r\n            <h3>Second slide label</h3>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={Logo1}\r\n            alt=\"Third slide\"\r\n            height=\"300px\"\r\n          />\r\n  \r\n          <Carousel.Caption>\r\n            <h3>Third slide label</h3>\r\n            <p>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    );\r\n  }\r\n  \r\nconst AddForm = (props) => {\r\n    const [obj,setMyObj]= useState({\r\n      city_name:\"\",\r\n      state_id:\"\"\r\n    })\r\n    const [error,setError]=useState({\r\n        city_nameError:\"\",\r\n        isValid:false\r\n    });\r\n    \r\nconst [show, setShow] = useState(false);\r\nconst [ids,setIds] = useState(\"\");\r\n\r\nconst handleClose = () => setShow(false);\r\nconst handleShow = (id) => {setShow(true);\r\n  setIds(id);\r\n}\r\n\r\nconst deleteHandler = async (id) =>{\r\n    await props.deletestatedata(id);\r\n    setShow(false);\r\n  }\r\n    useEffect(()=>{\r\n        props.fetchstatedata();\r\n      // console.log(props.states);\r\n    },[props.fetchstatedata])\r\n    \r\n    const handleSubmit = async () =>{\r\n      let errors = { ...error,isValid: true };\r\n        if(obj.city_name == \"\"){\r\n            errors.city_nameError=\"Please Required CityName !!\";\r\n            errors.isValid=true;\r\n        }else{\r\n            errors.isValid=false;\r\n            errors.city_nameError=\"\";\r\n        }\r\n        // console.log(errors.city_nameError)\r\n        if(errors.isValid==false){\r\n            await props.addcitiesdata(obj);\r\n            props.history.replace(\"/city\");\r\n            obj.city_name=\"\";\r\n        }\r\n        setError(errors);\r\n    }\r\n  \r\n    const HandleChange = (e,name) =>{\r\n       let olddata = {...obj};\r\n       olddata[name] = e.target.value;\r\n      //  console.log(olddata);\r\n       setMyObj(olddata);\r\n    }\r\n  \r\n    const backHandler = () => {\r\n      props.history.replace(\"/city\")\r\n    }\r\n\r\n    const optionTemplate = () => {\r\n      return props.states.map((stateslist) => {\r\n      const { _id, state_name } = stateslist;\r\n      if(!obj.state_id){\r\n        obj.state_id=_id;\r\n        setMyObj(obj);\r\n    }\r\n      return (\r\n          <option value={_id} key={_id}>{state_name}</option>\r\n       )\r\n      })\r\n    \r\n    }\r\n    let errors = { ...error,isValid: true };\r\n    // let errors = { ...error};\r\n    // console.log(errors.city_nameError);\r\n  return (\r\n    <>\r\n    <Card>\r\n      <Card.Header className={\"Header\"}>\r\n          <div className={\"Title\"}>\r\n              City List\r\n          </div>\r\n          <div className=\"input-group\" style={{ maxWidth: \"50px\" }}>\r\n              <Button variant=\"secondary\" onClick={() => backHandler()} >Back</Button>\r\n                 \r\n              </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        <Card.Title>Add City</Card.Title>\r\n        <Form>\r\n            <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                <Form.Label column sm=\"2\">\r\n                    Enter City Name\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                    <Form.Control isInvalid={error.city_nameError} type=\"text\" name=\"city_name\" onChange={(e)=>{HandleChange(e,\"city_name\")}} placeholder=\"Enter city name ...\" style={{maxWidth : \"300px\"}}/>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                    {error.city_nameError}\r\n                        </Form.Control.Feedback>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                <Form.Label column sm=\"2\">\r\n                    Select State :-\r\n                </Form.Label>\r\n                <Col sm=\"3\">\r\n                    <Form.Control as=\"select\" name=\"state_id\" onChange={(e) => {HandleChange(e,\"state_id\")}} >\r\n                        {optionTemplate()}\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n                    <Button variant=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n            </Form>\r\n        </Card.Body>\r\n    </Card>\r\n    {/* Delete Record  */}\r\n    <Modal  show={show} onHide={handleClose} style={{paddingTop:\"156px\"}}>\r\n            <Card bg=\"Light\" text='dark' >\r\n                  <Modal.Header closeButton style={{ backgroundColor: \"#344c63\",color: \"white\"}}>\r\n                    {/* <Card.Body > */}\r\n                        <Card.Title><b>Are you sure!</b></Card.Title>\r\n                    {/* </Card.Body> */}\r\n                  </Modal.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                            Do you want to delete this state?\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                        <Modal.Footer>\r\n                          <Button variant=\"danger\"  onClick={() => deleteHandler(ids)}>Delete</Button>\r\n                          <Button variant=\"secondary\"  onClick={handleClose} style={{    marginLeft: \"17px\"}}>Cancel</Button>\r\n                        </Modal.Footer>\r\n                    \r\n                </Card>\r\n            </Modal>\r\n    <ControlledCarousel />\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps =  (state) => ({\r\n    err:state.stateReducer.error,\r\n    states:state.stateReducer.states,\r\n  })\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    fetchstatedata:()=>dispatch(fetchstatedata()),\r\n    addcitiesdata: (postdata) => dispatch(addcitiesdata(postdata))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddForm);\r\n","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\userRegistration.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"D:\\Sem-9_Project_Movie\\ui\\src\\registerTask.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\theaterRegistration.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\userAction.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\userActionTypes.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":91,"column":32,"nodeType":"158","messageId":"159","endLine":91,"endColumn":34},{"ruleId":"160","severity":1,"message":"161","line":2,"column":21,"nodeType":"162","messageId":"163","endLine":2,"endColumn":25},{"ruleId":"160","severity":1,"message":"164","line":2,"column":26,"nodeType":"162","messageId":"163","endLine":2,"endColumn":29},{"ruleId":"165","severity":1,"message":"166","line":21,"column":5,"nodeType":"167","endLine":21,"endColumn":27,"suggestions":"168"},{"ruleId":"152","replacedBy":"169"},{"ruleId":"154","replacedBy":"170"},{"ruleId":"156","severity":1,"message":"157","line":91,"column":36,"nodeType":"158","messageId":"159","endLine":91,"endColumn":38},{"ruleId":"160","severity":1,"message":"171","line":2,"column":39,"nodeType":"162","messageId":"163","endLine":2,"endColumn":48},{"ruleId":"160","severity":1,"message":"172","line":2,"column":53,"nodeType":"162","messageId":"163","endLine":2,"endColumn":56},{"ruleId":"165","severity":1,"message":"166","line":26,"column":5,"nodeType":"167","endLine":26,"endColumn":49,"suggestions":"173"},{"ruleId":"160","severity":1,"message":"171","line":3,"column":23,"nodeType":"162","messageId":"163","endLine":3,"endColumn":32},{"ruleId":"160","severity":1,"message":"174","line":80,"column":7,"nodeType":"162","messageId":"163","endLine":80,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":91,"column":7,"nodeType":"167","endLine":91,"endColumn":29,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":95,"column":26,"nodeType":"178","messageId":"179","endLine":95,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":103,"column":26,"nodeType":"178","messageId":"179","endLine":103,"endColumn":28},{"ruleId":"160","severity":1,"message":"180","line":135,"column":9,"nodeType":"162","messageId":"163","endLine":135,"endColumn":15},{"ruleId":"160","severity":1,"message":"181","line":4,"column":21,"nodeType":"162","messageId":"163","endLine":4,"endColumn":35},{"ruleId":"160","severity":1,"message":"182","line":7,"column":10,"nodeType":"162","messageId":"163","endLine":7,"endColumn":22},{"ruleId":"160","severity":1,"message":"183","line":7,"column":24,"nodeType":"162","messageId":"163","endLine":7,"endColumn":30},{"ruleId":"160","severity":1,"message":"184","line":7,"column":32,"nodeType":"162","messageId":"163","endLine":7,"endColumn":38},{"ruleId":"160","severity":1,"message":"185","line":7,"column":40,"nodeType":"162","messageId":"163","endLine":7,"endColumn":46},{"ruleId":"160","severity":1,"message":"186","line":7,"column":48,"nodeType":"162","messageId":"163","endLine":7,"endColumn":55},{"ruleId":"160","severity":1,"message":"187","line":7,"column":57,"nodeType":"162","messageId":"163","endLine":7,"endColumn":65},{"ruleId":"165","severity":1,"message":"166","line":13,"column":5,"nodeType":"167","endLine":13,"endColumn":27,"suggestions":"188"},{"ruleId":"176","severity":1,"message":"177","line":48,"column":21,"nodeType":"178","messageId":"179","endLine":48,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":48,"column":42,"nodeType":"178","messageId":"179","endLine":48,"endColumn":44},{"ruleId":"176","severity":1,"message":"177","line":48,"column":65,"nodeType":"178","messageId":"179","endLine":48,"endColumn":67},{"ruleId":"176","severity":1,"message":"177","line":48,"column":87,"nodeType":"178","messageId":"179","endLine":48,"endColumn":89},{"ruleId":"176","severity":1,"message":"177","line":48,"column":106,"nodeType":"178","messageId":"179","endLine":48,"endColumn":108},{"ruleId":"176","severity":1,"message":"189","line":48,"column":125,"nodeType":"178","messageId":"179","endLine":48,"endColumn":127},{"ruleId":"176","severity":1,"message":"177","line":49,"column":23,"nodeType":"178","messageId":"179","endLine":49,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":53,"column":22,"nodeType":"178","messageId":"179","endLine":53,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":57,"column":24,"nodeType":"178","messageId":"179","endLine":57,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":61,"column":23,"nodeType":"178","messageId":"179","endLine":61,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":65,"column":20,"nodeType":"178","messageId":"179","endLine":65,"endColumn":22},{"ruleId":"176","severity":1,"message":"189","line":69,"column":20,"nodeType":"178","messageId":"179","endLine":69,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":85,"column":22,"nodeType":"178","messageId":"179","endLine":85,"endColumn":24},{"ruleId":"190","severity":1,"message":"191","line":140,"column":19,"nodeType":"192","endLine":140,"endColumn":135},{"ruleId":"190","severity":1,"message":"191","line":143,"column":19,"nodeType":"192","endLine":143,"endColumn":186},{"ruleId":"160","severity":1,"message":"181","line":4,"column":21,"nodeType":"162","messageId":"163","endLine":4,"endColumn":35},{"ruleId":"165","severity":1,"message":"166","line":12,"column":5,"nodeType":"167","endLine":12,"endColumn":27,"suggestions":"193"},{"ruleId":"176","severity":1,"message":"177","line":47,"column":21,"nodeType":"178","messageId":"179","endLine":47,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":47,"column":42,"nodeType":"178","messageId":"179","endLine":47,"endColumn":44},{"ruleId":"176","severity":1,"message":"177","line":47,"column":65,"nodeType":"178","messageId":"179","endLine":47,"endColumn":67},{"ruleId":"176","severity":1,"message":"177","line":47,"column":87,"nodeType":"178","messageId":"179","endLine":47,"endColumn":89},{"ruleId":"176","severity":1,"message":"177","line":47,"column":106,"nodeType":"178","messageId":"179","endLine":47,"endColumn":108},{"ruleId":"176","severity":1,"message":"189","line":47,"column":125,"nodeType":"178","messageId":"179","endLine":47,"endColumn":127},{"ruleId":"176","severity":1,"message":"177","line":48,"column":23,"nodeType":"178","messageId":"179","endLine":48,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":52,"column":22,"nodeType":"178","messageId":"179","endLine":52,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":56,"column":24,"nodeType":"178","messageId":"179","endLine":56,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":60,"column":23,"nodeType":"178","messageId":"179","endLine":60,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":64,"column":20,"nodeType":"178","messageId":"179","endLine":64,"endColumn":22},{"ruleId":"176","severity":1,"message":"189","line":68,"column":20,"nodeType":"178","messageId":"179","endLine":68,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":83,"column":22,"nodeType":"178","messageId":"179","endLine":83,"endColumn":24},{"ruleId":"190","severity":1,"message":"191","line":135,"column":19,"nodeType":"192","endLine":135,"endColumn":180},{"ruleId":"190","severity":1,"message":"191","line":138,"column":19,"nodeType":"192","endLine":138,"endColumn":141},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Tab' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["196"],["194"],["195"],"'CardGroup' is defined but never used.","'Col' is defined but never used.",["197"],"'handleShow' is assigned a value but never used.",["198"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'errors' is assigned a value but never used.","'fetchusersdata' is defined but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBBtn' is defined but never used.","'MDBCard' is defined but never used.","'MDBInput' is defined but never used.",["199"],"Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["200"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"201","fix":"205"},{"desc":"201","fix":"206"},{"desc":"201","fix":"207"},"Update the dependencies array to be: [props, props.fetchstatedata]",{"range":"208","text":"209"},"Update the dependencies array to be: [props, props.fetchcitiesdata, props.fetchstatedata]",{"range":"210","text":"211"},{"range":"212","text":"209"},{"range":"213","text":"209"},{"range":"214","text":"209"},[698,720],"[props, props.fetchstatedata]",[875,919],"[props, props.fetchcitiesdata, props.fetchstatedata]",[2637,2659],[549,571],[464,486]]