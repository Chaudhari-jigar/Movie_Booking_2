[{"D:\\Sem-9_Project_Movie\\ui\\src\\index.js":"1","D:\\Sem-9_Project_Movie\\ui\\src\\reportWebVitals.js":"2","D:\\Sem-9_Project_Movie\\ui\\src\\App.js":"3","D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\stateReducer.js":"4","D:\\Sem-9_Project_Movie\\ui\\src\\stateTask.js":"5","D:\\Sem-9_Project_Movie\\ui\\src\\store\\actionTypes.js":"6","D:\\Sem-9_Project_Movie\\ui\\src\\components\\common\\Header.js":"7","D:\\Sem-9_Project_Movie\\ui\\src\\components\\State_All_Form\\stateList.js":"8","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\stateAction.js":"9","D:\\Sem-9_Project_Movie\\ui\\src\\components\\State_All_Form\\addForm.js":"10","D:\\Sem-9_Project_Movie\\ui\\src\\components\\common\\Footer.js":"11","D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\cityReducer.js":"12","D:\\Sem-9_Project_Movie\\ui\\src\\store\\cityActionTypes.js":"13","D:\\Sem-9_Project_Movie\\ui\\src\\components\\City_All_Form\\cityList.js":"14","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\cityAction.js":"15","D:\\Sem-9_Project_Movie\\ui\\src\\components\\City_All_Form\\addForm.js":"16","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\userRegistration.js":"17","D:\\Sem-9_Project_Movie\\ui\\src\\registerTask.js":"18","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\theaterRegistration.js":"19","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\userAction.js":"20","D:\\Sem-9_Project_Movie\\ui\\src\\store\\userActionTypes.js":"21","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\loginForm.js":"22","D:\\Sem-9_Project_Movie\\ui\\src\\components\\Movie_All_Form\\addMovie.js":"23","D:\\Sem-9_Project_Movie\\ui\\src\\components\\Movie_All_Form\\movieList.js":"24","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\movieAction.js":"25","D:\\Sem-9_Project_Movie\\ui\\src\\store\\movieActionTypes.js":"26","D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\movieReducer.js":"27","D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\userReducer.js":"28","D:\\Sem-9_Project_Movie\\ui\\src\\components\\Users_Theater_List\\allUsersList.js":"29","D:\\Sem-9_Project_Movie\\ui\\src\\components\\Users_Theater_List\\allTheaterList.js":"30","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\dashboard.js":"31","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\Temp.js":"32","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\Temp1.js":"33"},{"size":1194,"mtime":1608092881569,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":311,"mtime":1607220884874,"results":"37","hashOfConfig":"35"},{"size":3671,"mtime":1607142002442,"results":"38","hashOfConfig":"35"},{"size":1777,"mtime":1608567895005,"results":"39","hashOfConfig":"35"},{"size":1098,"mtime":1608439857293,"results":"40","hashOfConfig":"35"},{"size":8565,"mtime":1608724124326,"results":"41","hashOfConfig":"35"},{"size":5791,"mtime":1608635408125,"results":"42","hashOfConfig":"35"},{"size":2845,"mtime":1608088337806,"results":"43","hashOfConfig":"35"},{"size":2482,"mtime":1607697250858,"results":"44","hashOfConfig":"35"},{"size":298,"mtime":1606906342616,"results":"45","hashOfConfig":"35"},{"size":4284,"mtime":1607229256693,"results":"46","hashOfConfig":"35"},{"size":1130,"mtime":1607229197585,"results":"47","hashOfConfig":"35"},{"size":7207,"mtime":1608258349410,"results":"48","hashOfConfig":"35"},{"size":3614,"mtime":1608118862247,"results":"49","hashOfConfig":"35"},{"size":4428,"mtime":1607697201156,"results":"50","hashOfConfig":"35"},{"size":12120,"mtime":1608054624681,"results":"51","hashOfConfig":"35"},{"size":3549,"mtime":1608691921036,"results":"52","hashOfConfig":"35"},{"size":11966,"mtime":1608095304390,"results":"53","hashOfConfig":"35"},{"size":8024,"mtime":1608724635552,"results":"54","hashOfConfig":"35"},{"size":2330,"mtime":1608700683324,"results":"55","hashOfConfig":"35"},{"size":3802,"mtime":1608691902851,"results":"56","hashOfConfig":"35"},{"size":11571,"mtime":1608645332228,"results":"57","hashOfConfig":"35"},{"size":18579,"mtime":1608569845367,"results":"58","hashOfConfig":"35"},{"size":3047,"mtime":1608176836175,"results":"59","hashOfConfig":"35"},{"size":872,"mtime":1607829498081,"results":"60","hashOfConfig":"35"},{"size":4196,"mtime":1608293840926,"results":"61","hashOfConfig":"35"},{"size":8466,"mtime":1608724788878,"results":"62","hashOfConfig":"35"},{"size":5092,"mtime":1608692238844,"results":"63","hashOfConfig":"35"},{"size":4876,"mtime":1608692296654,"results":"64","hashOfConfig":"35"},{"size":2930,"mtime":1608645228994,"results":"65","hashOfConfig":"35"},{"size":2501,"mtime":1608691963967,"results":"66","hashOfConfig":"35"},{"size":2501,"mtime":1608692013582,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"2xmmj7",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"70"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"70"},"D:\\Sem-9_Project_Movie\\ui\\src\\index.js",[],["153","154"],"D:\\Sem-9_Project_Movie\\ui\\src\\reportWebVitals.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\App.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\stateReducer.js",["155"],"import * as actionTypes from \"../actionTypes\";\r\nconst initalstore ={\r\n    states:[],\r\n    singlestate:{},\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nconst store = (state = initalstore,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.INIT_FETCH_STATES:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n            }\r\n        case actionTypes.FETCH_STATES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                states:action.states\r\n            }\r\n\r\n        case actionTypes.FETCH_STATES_FAILED:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:action.error,\r\n            }\r\n        case actionTypes.INIT_ADD_STATES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.ADD_STATES_SUCCESS:\r\n\r\n                return{\r\n                    ...state,\r\n                    loading:false                  \r\n                }\r\n        case actionTypes.ADD_STATES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_DELETE_STATES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n    \r\n                    };\r\n        case actionTypes.DELETE_STATES_SUCCESS:\r\n                let statees = state.states.filter(statese => statese._id !== action.id);\r\n                // let studentst = state.states.filter(student => student._id !== action.id);\r\n                return{\r\n                    ...state,\r\n                    loading:false,   \r\n                    states:statees,\r\n                }\r\n        case actionTypes.DELETE_STATES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_SINGLE_STATES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,    \r\n                    };\r\n        case actionTypes.SINGLE_STATES_SUCCESS:\r\n            console.log(action.singlestate)\r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    singlestate:action.singlestate             \r\n                }\r\n        case actionTypes.SINGLE_STATES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_UPDATE_STATES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.UPDATE_STATES_SUCCESS:\r\n            let statesst = [...state.states];\r\n            statesst.map(order => {\r\n                if(order._id === action.states._id)\r\n                {\r\n                    order.state_name = action.states.state_name                    \r\n                }\r\n            });\r\n            // console.log(action.singlestates);\r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    states:statesst             \r\n                }\r\n        case actionTypes.UPDATE_STATES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n            default :\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default store;","D:\\Sem-9_Project_Movie\\ui\\src\\stateTask.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\actionTypes.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\common\\Header.js",["156","157","158","159","160","161"],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\State_All_Form\\stateList.js",["162","163","164","165","166","167"],"import React, { useState, useEffect } from 'react';\r\n// import {  Modal } from 'react-bootstrap';\r\nimport { fetchstatedata, deletestatedata, updatestatedata, singlestateDataFetch } from '../../store/action/stateAction';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { BiPlusMedical, BiSearch } from 'react-icons/bi';\r\nimport { FiAlignJustify } from \"react-icons/fi\";\r\nimport { Table,Space,Button,Breadcrumb,Card,Form,Modal,Input } from 'antd';\r\nimport '../state.css';\r\n\r\nconst StateList = (props) => {\r\n  const [obj, setMyObj1] = useState({\r\n    _id: \"\",\r\n    state_name: \"\",\r\n  })\r\n\r\n  const [ids, setIds] = useState(\"\");\r\n  const [error,setError] = useState({\r\n    state_nameError:'',\r\n    IsValid:false\r\n})\r\n  useEffect(() => {\r\n    props.fetchstatedata();\r\n    if (props.singlestate.state_name) {\r\n      console.log(props.singlestate.state_name)\r\n      let olddata={...obj};\r\n      olddata.state_name = props.singlestate.state_name;\r\n      olddata._id = props.singlestate._id;\r\n      setMyObj1(olddata);\r\n    }\r\n  }, [props.fetchstatedata,props.singlestate])\r\n\r\n  const deleteHandler = async (id) => {\r\n    await props.deletestatedata(id);\r\n    setShow(false);\r\n  }\r\n\r\n  const SingleSubmit = async () => {\r\n    // let categoryData = {...obj}\r\n    let errors = { ...error, IsValid : true };\r\n    if(!obj.state_name || obj.state_name === \"\")\r\n    {\r\n        errors.IsValid = false;\r\n        errors.state_nameError = \"StateName Is Required \"\r\n    }\r\n    else\r\n        errors.state_nameError = \"\"\r\n    setError(errors);\r\n    if(errors.IsValid==true){\r\n      await props.updatestatedata(obj._id, obj);\r\n      usetShow(false);\r\n      obj.state_name = \"\";\r\n      props.singlestate.state_name = \"\";\r\n    }\r\n  }\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [ushow, usetShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (id) => {\r\n    setShow(true);\r\n    setIds(id);\r\n  }\r\n\r\n  const SingleClose = () => {\r\n    setError({\r\n      state_nameError:\"\",\r\n      IsValid:true\r\n    })\r\n    obj.state_name = \"\";\r\n    props.singlestate.state_name = \"\";\r\n    usetShow(false)\r\n  };\r\n\r\n  // if (props.singlestate.state_name && !obj.state_name) {\r\n  //   obj.state_name = props.singlestate.state_name;\r\n  //   obj._id = props.singlestate._id;\r\n  // }\r\n  const handleUpdate = async (_id) => {\r\n    await props.singlestateDataFetch(_id);\r\n    usetShow(true);\r\n  }\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'state_Name',\r\n      dataIndex: 'state_name',\r\n      key: 'state_name',\r\n      defaultSortOrder: 'descend',\r\n      sorter: (a, b) => a.state_name.length - b.state_name.length,\r\n    },{\r\n      title: 'Update',\r\n      key: 'Update',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button onClick={() => handleUpdate(record._id)} type=\"primary\">UPDATE</Button>\r\n        </Space>\r\n      ),\r\n    },{\r\n      title: 'Delete',\r\n      key: 'Delete',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"danger\" onClick={() => handleShow(record._id)} style={{backgroundColor:\"Red\",borderBlockColor:\"Black\",color:\"White\"}}>Delete</Button>\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n  // }\r\n  const HandleChange = (e, name) => {\r\n    let olddata = { ...obj };\r\n    olddata[name] = e.target.value;    \r\n    setMyObj1(olddata);\r\n  }\r\n  return (\r\n    <>\r\n          <Breadcrumb style={{ marginTop: \"-29px\",textAlign:\"right\",marginBottom:\"29px\" }} key=\"sdsgf\">\r\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item>State</Breadcrumb.Item>\r\n              <Breadcrumb.Item>View State List</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n            <div className=\"site-card-border-less-wrapper\" key=\"sdsbhdcb\">\r\n              <Card title=\"View State List\" bordered={false} style={{ width: \"auto\" }} key=\"sdkbjse\">\r\n                <Table columns={columns} dataSource={props.states} pagination={{ pageSize: 4 }} key=\"mvseuiwi\"/>\r\n              </Card>\r\n            </div>\r\n      {/* Update Record */}\r\n       <Modal title=\"Update State\"\r\n       key=\"ssd\"\r\n        visible={ushow}\r\n        onOk={() => SingleSubmit()}\r\n        onCancel={() =>SingleClose()}>\r\n            <Form>\r\n                <Input type=\"hidden\" name=\"_id\" value={obj._id} onChange={(e) => HandleChange(e, \"_id\")} placeholder=\"Enter state name ...\" />\r\n                <Form.Item label=\"Enter State Name:-\"\r\n                hasFeedback\r\n                validateStatus={(error.state_nameError)?\"error\":\"success\"}\r\n                help={error.state_nameError}>                  \r\n                    <Input type=\"text\" style={{ backgroundColor: \"#e2e2e2\", color: \"#463334\" }} name=\"state_name\" value={obj.state_name} onChange={(e) => HandleChange(e, \"state_name\")} placeholder=\"Enter state name ...\" />\r\n                </Form.Item>\r\n            </Form>\r\n      </Modal>\r\n\r\n      {/* Delete Record  */}\r\n       <Modal title=\"Are you sure!\"\r\n       key=\"sdsfd\"\r\n        visible={show}\r\n        onOk={() => deleteHandler(ids)}\r\n        onCancel={() =>handleClose()}>\r\n              Do you want to delete this state?\r\n      </Modal> \r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  err: state.stateReducer.error,\r\n  Loading: state.stateReducer.loading,\r\n  states: state.stateReducer.states,\r\n  singlestate: state.stateReducer.singlestate,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchstatedata: () => dispatch(fetchstatedata()),\r\n    deletestatedata: (_id) => dispatch(deletestatedata(_id)),\r\n    updatestatedata: (postdata, put) => dispatch(updatestatedata(postdata, put)),\r\n    singlestateDataFetch: (id) => dispatch(singlestateDataFetch(id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StateList);\r\n","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\stateAction.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\State_All_Form\\addForm.js",["168"],"import React,{useState} from 'react';\r\nimport {addstatedata} from '../../store/action/stateAction';\r\nimport {connect} from 'react-redux';\r\nimport { Breadcrumb,Card } from 'antd';\r\nimport \"../state.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button\r\n} from 'antd';\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n    offset: 4,\r\n  },\r\n};\r\n\r\nconst AddForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [obj,setMyObj]= useState({\r\n    state_name:\"\"\r\n  })\r\n\r\n  const handleSubmit = async () =>{\r\n    try {\r\n      const values = await form.validateFields();\r\n     await props.addstatedata(obj);\r\n     props.history.replace(\"/state\");\r\n    } catch (errorInfo) {\r\n      console.log('Failed:', errorInfo);\r\n    }\r\n  }\r\n\r\n  const HandleChange = (e,name) =>{\r\n     let olddata = {...obj};\r\n     olddata[name] = e.target.value;\r\n     setMyObj(olddata);\r\n  }\r\n\r\n  return (\r\n    <>    \r\n          <div className={\"Title\"} style={{marginTop: \"-29px\" }}>\r\n          </div>\r\n          <Breadcrumb style={{ marginTop: \"1px\",textAlign:\"right\",marginBottom:\"30px\"  }}>\r\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item>State</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Add State</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n            <div className=\"site-card-border-less-wrapper\">\r\n              <Card title=\"Add State Form\" bordered={false} style={{ width: \"auto\" }}>\r\n                      <Form form={form} name=\"AddForm\">\r\n                          <Form.Item {...formItemLayout} name=\"state_name\" label=\"Enter State Name:-\" rules={[{ required: true, message: 'Please required State!' }]}>\r\n                              <Input type=\"text\" name=\"state_name\" onChange={(e)=>{HandleChange(e,\"state_name\")}} placeholder=\"Enter state name ...\" style={{maxWidth : \"300px\"}}/>\r\n                          </Form.Item>\r\n                          <Form.Item {...formTailLayout} label=\"\">\r\n                              <Button type=\"primary\" onClick={handleSubmit}>Add State</Button>\r\n                          </Form.Item>\r\n                      </Form>\r\n              </Card>\r\n            </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    addstatedata: (postdata) => dispatch(addstatedata(postdata))\r\n  }\r\n}\r\nexport default connect(null,mapDispatchToProps)(AddForm);\r\n","D:\\Sem-9_Project_Movie\\ui\\src\\components\\common\\Footer.js",[],["169","170"],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\cityReducer.js",["171"],"import * as actionTypes from \"../cityActionTypes\";\r\nconst initalstore ={\r\n    cities:[],\r\n    singlecities:{},\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nconst store = (state = initalstore,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.INIT_FETCH_CITIES:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n            }\r\n        case actionTypes.FETCH_CITIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                cities:action.cities\r\n            }\r\n\r\n        case actionTypes.FETCH_CITIES_FAILED:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:action.error,\r\n            }\r\n        case actionTypes.INIT_ADD_CITIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.ADD_CITIES_SUCCESS:\r\n\r\n                return{\r\n                    ...state,\r\n                    loading:false                  \r\n                }\r\n        case actionTypes.ADD_CITIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_DELETE_CITIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n    \r\n                    };\r\n        case actionTypes.DELETE_CITIES_SUCCESS:\r\n                let citiest = state.cities.filter(statese => statese._id !== action.id);\r\n                // let studentst = state.states.filter(student => student._id !== action.id);\r\n                return{\r\n                    ...state,\r\n                    loading:false,   \r\n                    cities:citiest,\r\n                }\r\n        case actionTypes.DELETE_CITIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_SINGLE_CITIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,    \r\n                    };\r\n        case actionTypes.SINGLE_CITIES_SUCCESS:\r\n            // console.log(ac)\r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    singlecities:action.singlecities             \r\n                }\r\n        case actionTypes.SINGLE_CITIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_UPDATE_CITIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.UPDATE_CITIES_SUCCESS:\r\n                let statesst = [...state.cities];\r\n                statesst.map(order => {\r\n                    if(order._id === action.cities._id)\r\n                    {\r\n                        order.city_name = action.cities.city_name\r\n                        order.state_id = action.cities.state_id;\r\n                    }\r\n                });  \r\n                // console.log(action.cities.state_id);          \r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    cities:statesst\r\n                }\r\n        case actionTypes.UPDATE_CITIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_FETCHSTATESBYCITYID_CITIES:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n            }\r\n        case actionTypes.FETCHSTATESBYCITYID_CITIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                cities:action.cities\r\n            }\r\n        case actionTypes.FETCHSTATESBYCITYID_CITIES_FAILED:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:action.error,\r\n            }\r\n            default :\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default store;","D:\\Sem-9_Project_Movie\\ui\\src\\store\\cityActionTypes.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\City_All_Form\\cityList.js",["172","173","174","175"],"import React, { useState, useEffect } from 'react';\r\nimport { fetchcitiesdata, deletecitiesdata, updatecitiesdata, singlecitiesDataFetch } from '../../store/action/cityAction';\r\nimport { fetchstatedata } from '../../store/action/stateAction';\r\nimport { connect } from 'react-redux';\r\nimport '../state.css';\r\nimport { Table, Space, Button, Breadcrumb, Card, Form, Modal, Input, Select } from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 10,\r\n  },\r\n};\r\n\r\nconst CityList = (props) => {\r\n  const { Option } = Select;\r\n  const [form] = Form.useForm();\r\n  const [error,setError] = useState({\r\n    state_nameError:'',\r\n    IsValid:false,\r\n    city_nameError:\"\"\r\n})\r\n  const [obj, setMyObj1] = useState({\r\n    _id: \"\",\r\n    city_name: \"\",\r\n    state_id: \"\"\r\n  })\r\n  const [op,setOp] = useState(true);\r\n  const [ids, setIds] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [ushow, usetShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.fetchcitiesdata();\r\n    props.fetchstatedata();\r\n    if (props.singlecities.city_name) {\r\n      console.log(props.singlecities.city_name)\r\n      let olddata={...obj};\r\n      olddata.city_name = props.singlecities.city_name;\r\n      olddata._id = props.singlecities._id;\r\n      olddata.state_id=props.singlecities.state_id;\r\n      setMyObj1(olddata);\r\n    }\r\n  }, [props.fetchcitiesdata, props.fetchstatedata,props.singlecities])\r\n\r\n  const deleteHandler = async (id) => {\r\n    await props.deletecitiesdata(id);\r\n    setShow(false);\r\n  }\r\n\r\n  const SingleSubmit = async () => {\r\n    let errors = { ...error, IsValid : true };\r\n    if(!obj.state_id || obj.state_id === \"\" || !obj.city_name || obj.city_name === \"\")\r\n    {\r\n      if(!obj.state_id || obj.state_id === \"\"){\r\n        errors.IsValid = false;\r\n        errors.state_nameError = \"StateName Is Required \"\r\n      }\r\n      if(!obj.city_name || obj.city_name === \"\"){\r\n        errors.IsValid = false;\r\n        errors.city_nameError = \"cityname Is Required \"\r\n      }\r\n\r\n    }else{\r\n        errors.state_nameError = \"\"\r\n        errors.city_nameError = \"\"\r\n    }\r\n      setError(errors);\r\n      if(errors.IsValid==true){\r\n        await props.updatecitiesdata(obj._id, obj);\r\n        setOp(true);\r\n        usetShow(false);\r\n        obj._id = props.singlecities._id;\r\n        obj.city_name = \"\";\r\n      }\r\n    \r\n  }\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (id) => {\r\n    setOp(true);\r\n    setShow(true);\r\n    setIds(id);\r\n  }\r\n\r\n  const SingleClose = () => {\r\n    setOp(true);\r\n    obj.city_name = \"\";\r\n    props.singlecities.city_name = \"\";\r\n    usetShow(false)\r\n  };\r\n\r\n  // if (props.singlecities.city_name && !obj.city_name) {\r\n  //   if(op!=false){\r\n  //     console.log(op);\r\n  //     setMyObj1(props.singlecities)\r\n  //   }\r\n  // }\r\n  const handleUpdate = async (_id) => {\r\n    await props.singlecitiesDataFetch(_id);\r\n    usetShow(true);\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'city_Name',\r\n      dataIndex: 'city_name',\r\n      key: 'city_name',\r\n      defaultSortOrder: 'descend',\r\n      sorter: (a, b) => a.city_name.length - b.city_name.length,\r\n    }, {\r\n      title: 'state_name',\r\n      key: 'state_id',\r\n      defaultSortOrder: 'descend',\r\n      render: s => s.state_id.state_name,\r\n      sorter: (a, b) => a.state_id.state_name.length - b.state_id.state_name.length,\r\n    }, {\r\n      title: 'Update',\r\n      key: 'Update',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button onClick={() => handleUpdate(record._id)} type=\"primary\">UPDATE</Button>\r\n        </Space>\r\n      ),\r\n    }, {\r\n      title: 'Delete',\r\n      key: 'Delete',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"danger\" onClick={() => handleShow(record._id)} style={{ backgroundColor: \"Red\", borderBlockColor: \"Black\", color: \"White\" }}>Delete</Button>\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  const HandleChange = (e, name) => {\r\n    let olddata = { ...obj };\r\n    if (name != \"state_id\") {\r\n      olddata[name] = e.target.value;\r\n    } else {\r\n      olddata[name] = e;\r\n    }\r\n    setOp(false);\r\n    setMyObj1(olddata);\r\n  }\r\n\r\n  const optionTemplate = () => {\r\n    return props.states.map((stateslist) => {\r\n      const { _id, state_name } = stateslist;\r\n      return (\r\n        <Option value={_id} key={_id}>{state_name}</Option>\r\n      )\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <div className={\"Title\"} style={{ marginTop: \"-29px\"}}>\r\n        {/* City List */}\r\n          </div>\r\n      <Breadcrumb style={{ marginTop: \"1px\",textAlign:\"right\",marginBottom:\"29px\" }}>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item>City</Breadcrumb.Item>\r\n        <Breadcrumb.Item>View City List</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"site-card-border-less-wrapper\">\r\n        <Card title=\"View City List\" bordered={true} style={{ width: \"auto\",border:\"5px\" }}>\r\n          <Table columns={columns} dataSource={props.cities} pagination={{ pageSize: 4 }} />\r\n        </Card>\r\n      </div>\r\n      {/* Update Record */}\r\n      <Modal title=\"Update State\"\r\n        visible={ushow}\r\n        onOk={() => SingleSubmit()}\r\n        onCancel={() => SingleClose()}>\r\n        <Form form={form} name=\"CityList\">\r\n          <Input type=\"hidden\" name=\"_id\" value={obj._id} onChange={(e) => HandleChange(e, \"_id\")} />\r\n          <Form.Item {...formItemLayout} label=\"Enter City Name:-\" \r\n                hasFeedback\r\n                validateStatus={(error.city_nameError)?\"error\":\"success\"}\r\n                help={error.city_nameError}>\r\n            <Input type=\"text\" name=\"city_name\" value={obj.city_name || \" \"} onChange={(e) => { HandleChange(e, \"city_name\") }} placeholder=\"Enter city name ...\" />\r\n          </Form.Item>\r\n          <Form.Item {...formItemLayout} label=\"Select State :-\" \r\n                hasFeedback\r\n                validateStatus={(error.state_nameError)?\"error\":\"success\"}\r\n                help={error.state_nameError}>\r\n            <Select name=\"state_id\" value={obj.state_id} onChange={(e) => HandleChange(e, \"state_id\")} placeholder=\"------ Select State-----\">\r\n              {optionTemplate()}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      {/* Delete Record  */}\r\n      <Modal title=\"Are you sure!\"\r\n        visible={show}\r\n        onOk={() => deleteHandler(ids)}\r\n        onCancel={() => handleClose()}>\r\n        Do you want to delete this state?\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  err: state.cityReducer.error,\r\n  cities: state.cityReducer.cities,\r\n  states: state.stateReducer.states,\r\n  singlecities: state.cityReducer.singlecities\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchstatedata: () => dispatch(fetchstatedata()),\r\n    fetchcitiesdata: () => dispatch(fetchcitiesdata()),\r\n    deletecitiesdata: (_id) => dispatch(deletecitiesdata(_id)),\r\n    updatecitiesdata: (postdata, put) => dispatch(updatecitiesdata(postdata, put)),\r\n    singlecitiesDataFetch: (id) => dispatch(singlecitiesDataFetch(id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CityList);\r\n","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\cityAction.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\City_All_Form\\addForm.js",["176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"import React,{useState,useEffect} from 'react';\r\n// import Form from 'react-bootstrap/Form';\r\nimport {Row,Col,Modal,CardGroup} from 'react-bootstrap';\r\n// import Card from 'react-bootstrap/Card';\r\n// import Button from 'react-bootstrap/Button'/;\r\nimport {addcitiesdata} from '../../store/action/cityAction';\r\nimport {fetchstatedata} from '../../store/action/stateAction';\r\nimport {connect} from 'react-redux';\r\nimport { Breadcrumb,Card,Select,Space } from 'antd';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button\r\n} from 'antd';\r\nconst {Option} = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n    offset: 4,\r\n  },\r\n};\r\n\r\nconst AddForm = (props) => {\r\n  const [form] = Form.useForm();\r\n    const [obj,setMyObj]= useState({\r\n      city_name:\"\",\r\n      state_id:\"\"\r\n    })\r\n    const [error,setError]=useState({\r\n        city_nameError:\"\",\r\n        isValid:false\r\n    });\r\n    \r\nconst [show, setShow] = useState(false);\r\nconst [ids,setIds] = useState(\"\");\r\n\r\nconst handleClose = () => setShow(false);\r\nconst handleShow = (id) => {setShow(true);\r\n  setIds(id);\r\n}\r\n\r\nconst deleteHandler = async (id) =>{\r\n    await props.deletestatedata(id);\r\n    setShow(false);\r\n  }\r\n    useEffect(()=>{\r\n      form.validateFields(['nickname']);\r\n        props.fetchstatedata();\r\n      // console.log(props.states);\r\n    },[props.fetchstatedata])\r\n    \r\n    const handleSubmit = async () =>{\r\n      try {\r\n        const values = await form.validateFields();\r\n        // console.log('Success:', values);\r\n        await props.addcitiesdata(obj);\r\n        props.history.replace(\"/city\");\r\n        obj.city_name=\"\";\r\n      } catch (errorInfo) {\r\n        console.log('Failed:', errorInfo);\r\n      }\r\n    }\r\n  \r\n\r\n    const HandleChange = (e,name) =>{\r\n      let olddata = {...obj};\r\n      if(name!=\"state_id\"){\r\n        olddata[name] = e.target.value;\r\n        }else{\r\n          olddata[name] = e;\r\n        }\r\n       setMyObj(olddata);\r\n    }\r\n\r\n    const optionTemplate = () => {\r\n      return props.states.map((stateslist) => {\r\n      const { _id, state_name } = stateslist;\r\n      return (\r\n          <Option value={_id} key={_id}>{state_name}</Option>\r\n       )\r\n      })    \r\n    }\r\n  return (\r\n\r\n    <>\r\n     <div className={\"Title\"} style={{marginTop: \"-29px\" }}>\r\n          </div>\r\n          <Breadcrumb style={{ marginTop: \"1px\",textAlign:\"right\",marginBottom:\"30px\"  }}>\r\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item>City</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Add City</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n            <div className=\"site-card-border-less-wrapper\">\r\n              <Card title=\"Add City Form\" bordered={false} style={{ width: \"auto\" }}>\r\n                      <Form form={form} name=\"AddForm\">\r\n                      <Form.Item {...formItemLayout} label=\"Enter City Name:-\" name=\"city_name\" rules={[{ required: true, message: 'Please required City!' }]}>\r\n                              <Input type=\"text\" name=\"city_name\" onChange={(e)=>{HandleChange(e,\"city_name\")}} placeholder=\"Enter city name ...\" style={{maxWidth : \"300px\"}}/>\r\n                          </Form.Item>\r\n                          <Form.Item {...formItemLayout} label=\"Select State :-\" name=\"state_id\" rules={[{ required: true, message: 'Please required State!' }]}>\r\n                                <Select name=\"state_id\" onChange={(e)=>HandleChange(e,\"state_id\")} placeholder=\"------ Select State-----\" allowClear>\r\n                                      {optionTemplate()}\r\n                                  </Select>\r\n                          </Form.Item>\r\n                           <Form.Item {...formTailLayout} label=\"\"> \r\n                                <Button type=\"primary\" onClick={(e) =>handleSubmit()}>Add City</Button>\r\n                          </Form.Item> \r\n                      </Form>\r\n              </Card>\r\n            </div>\r\n    \r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps =  (state) => ({\r\n    err:state.stateReducer.error,\r\n    states:state.stateReducer.states,\r\n  })\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    fetchstatedata:()=>dispatch(fetchstatedata()),\r\n    addcitiesdata: (postdata) => dispatch(addcitiesdata(postdata))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddForm);\r\n","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\userRegistration.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215"],"import React, { useState,useEffect } from \"react\";\r\nimport {Form,Col,Button} from \"react-bootstrap\";\r\nimport {connect} from 'react-redux';\r\nimport {adduserdata,fetchusersdata} from '../../store/action/userAction';\r\nimport {fetchstatedata} from '../../store/action/stateAction';\r\nimport {fetchAllStatesBystate_id} from '../../store/action/cityAction';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBInput } from 'mdbreact';\r\nimport '../register.css';\r\n\r\nconst FormPage = (props) => {\r\n  useEffect(()=>{\r\n    props.fetchstatedata();\r\n  },[props.fetchstatedata])\r\n\r\n  const [obj,setMyObj] = useState({\r\n    user_name:\"\",\r\n    password:\"\",\r\n    email:\"\",\r\n    gender:\"Male\",\r\n    photo1:\"\",\r\n    state_id:\"\",\r\n    city_id:\"\",\r\n    group_id:\"\",\r\n    is_active:\"\"\r\n  });\r\n  \r\n  const [error,setError]=useState({\r\n    user_name_nameError:\"\",\r\n    password_nameError:\"\",\r\n    gender_nameError:\"\",\r\n    email_nameError:\"\",\r\n    state_nameError:\"\",\r\n    city_nameError:\"\",\r\n    isValid:false\r\n  });\r\n\r\n  const handleSubmit =async () =>{\r\n    let errors = { ...error,isValid: true };\r\n    obj.group_id=\"5fcc4220e862ea35384c7c8e\";\r\n    obj.is_active=\"1\";\r\n    // obj.photo1=\"sds\";\r\n    errors.state_nameError=\"\";\r\n    errors.city_nameError=\"\";\r\n    errors.user_name_nameError=\"\";\r\n    errors.password_nameError=\"\";\r\n    errors.email_nameError=\"\";\r\n    errors.isValid=false;\r\n    if(obj.state_id == \"\" || obj.city_id == \"\" || obj.user_name == \"\" || obj.password == \"\" || obj.email == \"\" || obj.email != \"\"){\r\n      if(obj.state_id == \"\"){\r\n        errors.state_nameError=\"Please atleast one select state !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.city_id == \"\"){\r\n        errors.city_nameError=\"Please atleast one select city !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.user_name == \"\"){\r\n        errors.user_name_nameError=\"Please reuired username !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.password == \"\"){\r\n        errors.password_nameError=\"Please required password !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.email == \"\"){\r\n        errors.email_nameError=\"Please required email !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.email != \"\"){\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (!pattern.test(obj.email)) {\r\n          errors.isValid = true;\r\n          errors.email_nameError = \"Please enter valid email address.\";\r\n        }\r\n      }\r\n    }else{\r\n      errors.state_nameError=\"\";\r\n      errors.city_nameError=\"\";\r\n      errors.user_name_nameError=\"\";\r\n      errors.password_nameError=\"\";\r\n      errors.email_nameError=\"\";\r\n      errors.isValid=false;\r\n    }\r\n    if(errors.isValid==false){\r\n      const formdata = new FormData();\r\n      console.log(obj);\r\n      formdata.append(\"user_name\",obj.user_name);\r\n      formdata.append(\"password\",obj.password);\r\n      formdata.append(\"email\",obj.email);\r\n      formdata.append(\"gender\",obj.gender);\r\n      formdata.append(\"photo1\",obj.photo1);\r\n      formdata.append(\"state_id\",obj.state_id);\r\n      formdata.append(\"city_id\",obj.city_id);\r\n      formdata.append(\"group_id\",obj.group_id);\r\n      formdata.append(\"is_active\",obj.is_active);\r\n      console.log(obj.photo1);\r\n      await props.adduserdata(formdata);\r\n      props.history.replace(\"/\");\r\n    }\r\n    setError(errors);\r\n  }\r\n  const HandleChange = (e,name) =>{\r\n    let olddata = {...obj};\r\n    if (name == \"photo1\") {\r\n      const { target: { files } } = e\r\n      olddata[name] = files.length === 1 ? files[0] : files\r\n      olddata[name] = e.target.files[0];\r\n    }\r\n    else\r\n    {\r\n      olddata[name] = e.target.value;\r\n    }\r\n    setMyObj(olddata)\r\n    cityCall(olddata.state_id);\r\n  }\r\n\r\n  const cityCall =async (id) =>{\r\n    await props.fetchAllStatesBystate_id(id);\r\n    // console.log(props.cities);\r\n  }\r\n\r\n  const optionStates = () => {\r\n    return props.states.map((stateslist) => {\r\n    const { _id, state_name } = stateslist;\r\n      return (\r\n          <option value={_id} key={_id}>{state_name}</option>\r\n      )\r\n    })\r\n  }\r\n\r\n  const optioncities = () => {\r\n    return props.cities.map((stateslist) => {\r\n    const { _id, city_name } = stateslist;\r\n      return (\r\n          <option value={_id} key={_id}>{city_name}</option>\r\n      )\r\n    })\r\n  }\r\n\r\n  const backHandler = () => {\r\n    props.history.replace(\"/theaterreg\")\r\n  }\r\n\r\n  const loginHandler = () =>{\r\n    props.history.replace(\"/\")\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\" />\r\n        {/*---- Include the above in your HEAD tag --------*/}\r\n        <div className=\"container register\" style={{marginTop: \"2px\"}}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 register-left\">\r\n              <img src=\"https://image.ibb.co/n7oTvU/logo_white.png\" alt=\"\" />\r\n              <h3>Welcome</h3>\r\n              <p>You are 30 seconds away farom earning your own money!</p>\r\n              <input type=\"submit\" name defaultValue=\"Login\" disabled/><br />\r\n            </div>\r\n            <div className=\"col-md-9 register-right\">\r\n              <ul className=\"nav nav-tabs nav-justified\" id=\"myTab\" role=\"tablist\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" id=\"home-tab\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">User</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" variant=\"secondary\" onClick={() => backHandler()}  id=\"profile-tab\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Theater</a>\r\n                </li>\r\n              </ul>\r\n              <div className=\"tab-content\" id=\"myTabContent\">\r\n                <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                  <h3 className=\"register-heading\">Apply as a User</h3>\r\n                  <div className=\"row register-form\">\r\n                  <Form style={{marginLeft: \"100px\"}}>\r\n                  <Form.Row>\r\n                      <Form.Group  as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Enter Username:-</Form.Label>\r\n                        <Form.Control type=\"text\" isInvalid={error.user_name_nameError}  placeholder=\"Enter Username ...\" name=\"user_name\" onChange={(e) => {HandleChange(e,\"user_name\")}} style={{width:\"290px\"}}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {error.user_name_nameError}\r\n                          </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} controlId=\"formGridEmail2\">\r\n                      <Form.Label style={{marginLeft: \"28px\"}}>Enter Password:-</Form.Label>\r\n                      <Form.Control type=\"password\" isInvalid={error.password_nameError} placeholder=\"Enter Password ...\" name=\"password\" onChange={(e) => {HandleChange(e,\"password\")}}  style={{marginLeft: \"28px\",width:\"250px\"}}/>\r\n                      <Form.Control.Feedback type=\"invalid\" style={{marginLeft: \"28px\"}}>\r\n                            {error.password_nameError}\r\n                        </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                  </Form.Row>\r\n                  <Form.Row>\r\n                      <Form.Group  as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Enter Email:-</Form.Label>\r\n                        <Form.Control type=\"email\" isInvalid={error.email_nameError} className=\"form-control\" name=\"email\" onChange={(e) => {HandleChange(e,\"email\")}} onBlur={() => cityCall()} placeholder=\"Enter email ...\"   style={{width:\"290px\"}}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {error.email_nameError}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label style={{marginLeft: \"28px\"}}>Select Gender:-</Form.Label>\r\n                        <Form.Check type=\"radio\" name=\"gender\" value=\"male\" label=\"Male\" style={{marginLeft: \"28px\"}} onChange={(e) => {HandleChange(e,\"gender\")}} checked/>\r\n                        <Form.Check type=\"radio\" name=\"gender\" value=\"female\" label=\"Female\" style={{marginLeft: \"28px\"}} onChange={(e) => {HandleChange(e,\"gender\")}}/>\r\n                      </Form.Group>\r\n                  </Form.Row>\r\n                      \r\n                  <Form.Row>\r\n                      <Form.Group>\r\n                          <Form.Label>Select State:-</Form.Label>\r\n                          <Form.Control isInvalid={error.state_nameError} className=\"form-control\" as=\"select\" name=\"state_id\" onChange={(e) => {HandleChange(e,\"state_id\")}}  style={{width:\"290px\"}} >\r\n                            <option selected disabled>-----Select -----</option>\r\n                              {optionStates()}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {error.state_nameError}\r\n                          </Form.Control.Feedback>\r\n                      </Form.Group> \r\n                      <Form.Group>\r\n                          <Form.Label style={{marginLeft: \"50px\"}}>Select city:-</Form.Label>\r\n                          <Form.Control isInvalid={error.city_nameError} className=\"form-control\" as=\"select\" name=\"city_id\" onChange={(e) => {HandleChange(e,\"city_id\")}} style={{marginLeft: \"50px\",width:\"250px\"}} >\r\n                              <option selected disabled>-----Select -----</option>\r\n                              {optioncities()}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\" style={{marginLeft: \"28px\"}}>\r\n                            {error.city_nameError}\r\n                          </Form.Control.Feedback>\r\n                      </Form.Group> \r\n                  </Form.Row>\r\n                  <Form.Row>\r\n                      <Form.Group>\r\n                          <Form.Label>Select User photo:-</Form.Label>\r\n                          {/* <Form.File id=\"exampleFormControlFile1\" />   */}\r\n                          <Form.Control type=\"file\" name=\"photo1\" onChange={(e) => {HandleChange(e,\"photo1\")}} style={{maxWidth : \"300px\"}}/>\r\n                      </Form.Group> \r\n                      <Form.Group as={Col} controlId=\"formGridEmail2\">\r\n                          {/* <input type=\"submit\" /> */}\r\n                          <Button className=\"btnRegister\" defaultValue=\"Register\" style={{marginLeft: \"28px\"}} onClick={handleSubmit}>Submit</Button>\r\n                      </Form.Group>\r\n                  </Form.Row>\r\n                  </Form>\r\n                  <span className=\"logn-form-copy\" style={{ marginLeft: \"262px\",marginTop: \"26px\"}}>Already have an account? <a onClick={()=>{loginHandler()}} className=\"login-form__sign-up\" style={{color:\"#0074d9\"}}>Sign in</a></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  const mapStateToProps =  (state) => ({\r\n      err:state.stateReducer.error,\r\n      // err:state.userReducer.error1,\r\n      states:state.stateReducer.states,\r\n      cities:state.cityReducer.cities,\r\n    })\r\n  \r\n  const mapDispatchToProps = dispatch =>{\r\n    return{\r\n      fetchstatedata:()=>dispatch(fetchstatedata()),\r\n      // fetchcitiesdata:()=>dispatch(fetchcitiesdata()),\r\n      fetchAllStatesBystate_id:(_id)=>dispatch(fetchAllStatesBystate_id(_id)),\r\n      adduserdata: (postdata) => dispatch(adduserdata(postdata))\r\n    }\r\n  }\r\n  export default connect(mapStateToProps,mapDispatchToProps)(FormPage);\r\n  ","D:\\Sem-9_Project_Movie\\ui\\src\\registerTask.js",["216","217","218","219"],"import React,{useEffect} from 'react';\r\nimport { Switch, Route,Redirect } from 'react-router'\r\nimport RegisterForm from './components/All Registration form/userRegistration';\r\nimport LoginForm from './components/All Registration form/loginForm';\r\nimport {login,autoCheckLogin} from './store/action/userAction';\r\nimport TheaterRegistration from './components/All Registration form/theaterRegistration';\r\nimport Temp from './components/All Registration form/Temp';\r\nimport Temp1 from './components/All Registration form/Temp1';\r\nimport StateTask from './stateTask';\r\nimport {connect} from 'react-redux';\r\n\r\nconst RegisterTask = (props) => {\r\n\r\n    useEffect(() => {\r\n        if(props.location.pathname.startsWith(\"/\") && !props.token) {\r\n            props.autoCheckLogin();\r\n            // props.singleuser\r\n            console.log(props.singleuser1)\r\n        }\r\n    }, [props.location.pathname,props.autoCheckLogin,props.token])\r\n    let content = <Redirect to=\"/\" />\r\n    if(props.location.pathname.startsWith(\"/\") && !props.token) {\r\n        console.log(\"Login In \" + false + \" token \" + props.token);\r\n        content = <Switch>\r\n            <Route path=\"/login\" exact component={LoginForm}/>\r\n            <Route path=\"/userreg\" exact component={RegisterForm}/>\r\n            <Route path=\"/theaterreg\" exact component={TheaterRegistration}/>\r\n            <Redirect to=\"/login\" />\r\n        </Switch>\r\n    } else if(props.location.pathname.startsWith(\"/\") && props.token && props.singleuser.group_id.group_name==\"admin\") {\r\n        content = <>\r\n            <div >\r\n            <Switch>\r\n                \r\n                <Route path=\"/city\" component={StateTask}/>\r\n                <Route path=\"/city/cityAdd\" exact component={StateTask}/>\r\n                \r\n                <Route path=\"/state/stateAdd\" exact component={StateTask}/>\r\n                <Route path=\"/state\" exact component={StateTask}/>\r\n\r\n                <Route path=\"/movie\" exact component={StateTask} />\r\n                <Route path=\"/movie/movieAdd\" exact component={StateTask} />\r\n                \r\n                <Route path=\"/users/\" exact component={StateTask} />\r\n                <Route path=\"/theaters/\" exact component={StateTask} />\r\n                <Route path=\"/dashboard\" exact component={StateTask} />\r\n\r\n                <Redirect to=\"/dashboard\" />\r\n            </Switch>\r\n            </div>\r\n        </>    \r\n    }else if(props.location.pathname.startsWith(\"/\") && props.token && props.singleuser.group_id.group_name==\"user\"){\r\n        content = <>\r\n        <div >\r\n        <Switch>\r\n            <Route path=\"/Temp\" exact component={Temp} />\r\n\r\n            <Redirect to=\"/Temp\" />\r\n         </Switch>\r\n        </div> \r\n    </>\r\n     }else if(props.location.pathname.startsWith(\"/\") && props.token && props.singleuser.group_id.group_name==\"theater\"){\r\n            content = <>\r\n            <div > \r\n             <Switch>\r\n                \r\n                <Route path=\"/Temp1\" exact component={Temp1} />\r\n\r\n                <Redirect to=\"/Temp1\" />\r\n            </Switch>\r\n             </div>\r\n        </>\r\n    }\r\n    return content\r\n}\r\n\r\nconst mapStateToProps =  (state) => ({\r\n    err1:state.userReducer.error1,\r\n    singleuser:state.userReducer.singleuser,\r\n    token:state.userReducer.token ? true : false\r\n  })\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    autoCheckLogin:()=>dispatch(autoCheckLogin()),\r\n    login:(email,password)=>dispatch(login(email,password))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RegisterTask);","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\theaterRegistration.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238"],"import React, { useState,useEffect } from \"react\";\r\nimport {Form,Col,Button} from \"react-bootstrap\";\r\nimport {connect} from 'react-redux';\r\nimport {adduserdata,fetchusersdata} from '../../store/action/userAction';\r\nimport {fetchstatedata} from '../../store/action/stateAction';\r\nimport {fetchAllStatesBystate_id} from '../../store/action/cityAction';\r\nimport '../register.css';\r\n\r\nconst FormPage = (props) => {\r\n  useEffect(()=>{\r\n    props.fetchstatedata();\r\n  },[props.fetchstatedata])\r\n\r\n  const [obj,setMyObj] = useState({\r\n    user_name:\"\",\r\n    password:\"\",\r\n    email:\"\",\r\n    gender:\"Male\",\r\n    photo1:\"\",\r\n    state_id:\"\",\r\n    city_id:\"\",\r\n    group_id:\"\",\r\n    is_active:\"\"\r\n  });\r\n  \r\n  const [error,setError]=useState({\r\n    user_name_nameError:\"\",\r\n    password_nameError:\"\",\r\n    gender_nameError:\"\",\r\n    email_nameError:\"\",\r\n    state_nameError:\"\",\r\n    city_nameError:\"\",\r\n    isValid:false\r\n  });\r\n\r\n  const handleSubmit =async () =>{\r\n    let errors = { ...error,isValid: true };\r\n    obj.group_id=\"5fcc4230e862ea35384c7c8f\";\r\n    obj.is_active=\"1\";\r\n    // obj.photo1=\"sds\";\r\n    errors.state_nameError=\"\";\r\n    errors.city_nameError=\"\";\r\n    errors.user_name_nameError=\"\";\r\n    errors.password_nameError=\"\";\r\n    errors.email_nameError=\"\";\r\n    errors.isValid=false;\r\n    if(obj.state_id == \"\" || obj.city_id == \"\" || obj.user_name == \"\" || obj.password == \"\" || obj.email == \"\" || obj.email != \"\"){\r\n      if(obj.state_id == \"\"){\r\n        errors.state_nameError=\"Please atleast one select state !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.city_id == \"\"){\r\n        errors.city_nameError=\"Please atleast one select city !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.user_name == \"\"){\r\n        errors.user_name_nameError=\"Please reuired username !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.password == \"\"){\r\n        errors.password_nameError=\"Please required password !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.email == \"\"){\r\n        errors.email_nameError=\"Please required email !!\"\r\n        errors.isValid=true;\r\n      }\r\n      if(obj.email != \"\"){\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (!pattern.test(obj.email)) {\r\n          errors.isValid = true;\r\n          errors.email_nameError = \"Please enter valid email address.\";\r\n        }\r\n      }\r\n    }else{\r\n      errors.state_nameError=\"\";\r\n      errors.city_nameError=\"\";\r\n      errors.user_name_nameError=\"\";\r\n      errors.password_nameError=\"\";\r\n      errors.email_nameError=\"\";\r\n      errors.isValid=false;\r\n    }\r\n    if(errors.isValid==false){\r\n      const formdata = new FormData();\r\n      console.log(obj);\r\n      formdata.append(\"user_name\",obj.user_name);\r\n      formdata.append(\"password\",obj.password);\r\n      formdata.append(\"email\",obj.email);\r\n      formdata.append(\"gender\",obj.gender);\r\n      formdata.append(\"photo1\",obj.photo1);\r\n      formdata.append(\"state_id\",obj.state_id);\r\n      formdata.append(\"city_id\",obj.city_id);\r\n      formdata.append(\"group_id\",obj.group_id);\r\n      formdata.append(\"is_active\",obj.is_active);\r\n      console.log(obj.photo1);\r\n      await props.adduserdata(formdata);\r\n      props.history.replace(\"/\");\r\n    }\r\n    setError(errors);\r\n  }\r\n  const HandleChange = (e,name) =>{\r\n    let olddata = {...obj};\r\n    if (name == \"photo1\") {\r\n      const { target: { files } } = e\r\n      olddata[name] = files.length === 1 ? files[0] : files\r\n      olddata[name] = e.target.files[0];\r\n    }\r\n    else\r\n    {\r\n      olddata[name] = e.target.value;\r\n    }\r\n    setMyObj(olddata)\r\n    cityCall(olddata.state_id);\r\n  }\r\n\r\n  const cityCall =async (id) =>{\r\n    await props.fetchAllStatesBystate_id(id);\r\n    // console.log(props.cities);\r\n  }\r\n\r\n  const optionStates = () => {\r\n    return props.states.map((stateslist) => {\r\n    const { _id, state_name } = stateslist;\r\n      return (\r\n          <option value={_id} key={_id}>{state_name}</option>\r\n      )\r\n    })\r\n  }\r\n\r\n  const optioncities = () => {\r\n    return props.cities.map((stateslist) => {\r\n    const { _id, city_name } = stateslist;\r\n      return (\r\n          <option value={_id} key={_id}>{city_name}</option>\r\n      )\r\n    })\r\n  }\r\n\r\n  const backHandler = () => {\r\n    props.history.replace(\"/userreg\")\r\n  }\r\n\r\n  const loginHandler = () =>{\r\n    props.history.replace(\"/\")\r\n  }\r\n\r\n    return (\r\n              <div>\r\n        <link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\" />\r\n        {/*---- Include the above in your HEAD tag --------*/}\r\n        <div className=\"container register\" style={{marginTop: \"2px\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 register-left\">\r\n              <img src=\"https://image.ibb.co/n7oTvU/logo_white.png\" alt=\"\" />\r\n              <h3>Welcome</h3>\r\n              <p>You are 30 seconds away farom earning your own money!</p>\r\n              <input type=\"submit\" name defaultValue=\"Login\" disabled/><br />\r\n            </div>\r\n            <div className=\"col-md-9 register-right\">\r\n              <ul className=\"nav nav-tabs nav-justified\" id=\"myTab\" role=\"tablist\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link \" variant=\"secondary\" onClick={() => backHandler()} id=\"home-tab\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"home\" aria-selected=\"false\">User</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" id=\"profile-tab\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"true\">Theater</a>\r\n                </li>\r\n              </ul>\r\n              <div className=\"tab-content\" id=\"myTabContent\">\r\n                <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                  <h3 className=\"register-heading\">Apply as a Theater</h3>\r\n                  <div className=\"row register-form\">\r\n                  <Form style={{marginLeft: \"100px\"}}>\r\n                  <Form.Row>\r\n                      <Form.Group  as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Enter Username:-</Form.Label>\r\n                        <Form.Control type=\"text\" isInvalid={error.user_name_nameError}  placeholder=\"Enter Username ...\" name=\"user_name\" onChange={(e) => {HandleChange(e,\"user_name\")}} style={{width:\"290px\"}}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {error.user_name_nameError}\r\n                          </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} controlId=\"formGridEmail2\">\r\n                      <Form.Label style={{marginLeft: \"28px\"}}>Enter Password:-</Form.Label>\r\n                      <Form.Control type=\"password\" isInvalid={error.password_nameError} placeholder=\"Enter Password ...\" name=\"password\" onChange={(e) => {HandleChange(e,\"password\")}}  style={{marginLeft: \"28px\",width:\"250px\"}}/>\r\n                      <Form.Control.Feedback type=\"invalid\" style={{marginLeft: \"28px\"}}>\r\n                            {error.password_nameError}\r\n                        </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                  </Form.Row>\r\n                  <Form.Row>\r\n                      <Form.Group  as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Enter Email:-</Form.Label>\r\n                        <Form.Control type=\"email\" isInvalid={error.email_nameError} className=\"form-control\" name=\"email\" onChange={(e) => {HandleChange(e,\"email\")}} onBlur={() => cityCall()} placeholder=\"Enter email ...\"   style={{width:\"290px\"}}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {error.email_nameError}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label style={{marginLeft: \"28px\"}}>Select Gender:-</Form.Label>\r\n                        <Form.Check type=\"radio\" name=\"gender\" value=\"male\" label=\"Male\" style={{marginLeft: \"28px\"}} onChange={(e) => {HandleChange(e,\"gender\")}} checked/>\r\n                        <Form.Check type=\"radio\" name=\"gender\" value=\"female\" label=\"Female\" style={{marginLeft: \"28px\"}} onChange={(e) => {HandleChange(e,\"gender\")}}/>\r\n                      </Form.Group>\r\n                  </Form.Row>\r\n                      \r\n                  <Form.Row>\r\n                      <Form.Group>\r\n                          <Form.Label>Select State:-</Form.Label>\r\n                          <Form.Control isInvalid={error.state_nameError} className=\"form-control\" as=\"select\" name=\"state_id\" onChange={(e) => {HandleChange(e,\"state_id\")}}  style={{width:\"290px\"}} >\r\n                            <option selected disabled>-----Select -----</option>\r\n                              {optionStates()}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {error.state_nameError}\r\n                          </Form.Control.Feedback>\r\n                      </Form.Group> \r\n                      <Form.Group>\r\n                          <Form.Label style={{marginLeft: \"50px\"}}>Select city:-</Form.Label>\r\n                          <Form.Control isInvalid={error.city_nameError} className=\"form-control\" as=\"select\" name=\"city_id\" onChange={(e) => {HandleChange(e,\"city_id\")}} style={{marginLeft: \"50px\",width:\"250px\"}} >\r\n                              <option selected disabled>-----Select -----</option>\r\n                              {optioncities()}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\" style={{marginLeft: \"28px\"}}>\r\n                            {error.city_nameError}\r\n                          </Form.Control.Feedback>\r\n                      </Form.Group> \r\n                  </Form.Row>\r\n                  <Form.Row>\r\n                      <Form.Group>\r\n                          <Form.Label>Select User Photo:-</Form.Label>\r\n                          <Form.Control type=\"file\" name=\"photo1\" onChange={(e) => {HandleChange(e,\"photo1\")}} style={{maxWidth : \"300px\"}}/>\r\n                      </Form.Group> \r\n                      <Form.Group as={Col} controlId=\"formGridEmail2\">\r\n                          {/* <input type=\"submit\" /> */}\r\n                          <Button className=\"btnRegister\" defaultValue=\"Register\" style={{marginLeft: \"28px\"}} onClick={handleSubmit}>Submit</Button>\r\n                      </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  </Form>\r\n                  <span className=\"logn-form-copy\" style={{ marginLeft: \"262px\",marginTop: \"26px\"}}>Already have an account? <a onClick={()=>{loginHandler()}} className=\"login-form__sign-up\" style={{color:\"#0074d9\"}}>Sign in</a></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  const mapStateToProps =  (state) => ({\r\n      err:state.stateReducer.error,\r\n      // err:state.userReducer.error1,\r\n      states:state.stateReducer.states,\r\n      cities:state.cityReducer.cities,\r\n    })\r\n  \r\n  const mapDispatchToProps = dispatch =>{\r\n    return{\r\n      fetchstatedata:()=>dispatch(fetchstatedata()),\r\n      // fetchcitiesdata:()=>dispatch(fetchcitiesdata()),\r\n      fetchAllStatesBystate_id:(_id)=>dispatch(fetchAllStatesBystate_id(_id)),\r\n      adduserdata: (postdata) => dispatch(adduserdata(postdata))\r\n    }\r\n  }\r\n  export default connect(mapStateToProps,mapDispatchToProps)(FormPage);\r\n  ","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\userAction.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\userActionTypes.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\loginForm.js",["239","240","241"],"import React,{useState,useEffect} from 'react';\r\nimport  \"./../css/login.css\";\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../store/action/userAction';\r\nimport {Form,Button,Input} from \"antd\";\r\nimport Logo from '../../Movie_logo/Admin3.jpg'\r\n\r\nconst NewComponent = (props) => {\r\n  const [form] = Form.useForm();\r\n  useEffect(()=>{\r\n    if(props.token===true){\r\n      props.history.replace(\"/city\");\r\n    }\r\n  },[props.token])\r\n  const [obj,setMyObj] = useState({\r\n    email:\"\",\r\n    password:\"\",\r\n  });\r\n  const [error,setError]=useState(false);\r\n  const handleSubmit = async () =>{\r\n    await props.login(obj.email,obj.password);\r\n    if(props.token!==true && obj.email && obj.password){\r\n     setError(true);\r\n    }\r\n  }\r\n\r\n    const signUp = () =>{\r\n        props.history.replace(\"/userreg\");\r\n    }\r\n\r\n    const HandleChange = (e,name) =>{\r\n      let olddata = {...obj};\r\n        olddata[name] = e.target.value;\r\n      setMyObj(olddata)\r\n    }\r\n      return (  \r\n        <Form className=\"login\" style={{marginLeft: \"500px\",marginTop:\"90px\",borderBottomLeftRadius: \"50px\",\r\n        borderBottomRightRadius: \"50px\",\r\n        borderTopLeftRadius: \"50px\",\r\n        borderTopRightRadius: \"50px\"}} form={form}\r\n        name=\"register\">\r\n          <header style={{marginTop:\"35px\",color:'#0ec78b'}}><img src={Logo} style={{height: \"60px\",width: \"60px\",marginLeft:\"05px\",borderBottomLeftRadius: \"43px\",borderBottomRightRadius: \"43px\",borderTopLeftRadius: \"43px\",borderTopRightRadius: \"43px\"}}/> Movie Login</header>\r\n          <div className=\"field\">\r\n              <span className=\"fa fa-user\" />\r\n              <Form.Item\r\n                  name=\"email\"\r\n                  style={{marginLeft:\"45px\",width:\"280px\"}}\r\n                  rules={[\r\n                    {\r\n                      type: 'email',\r\n                      message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your E-mail!',\r\n                    },\r\n                  ]}\r\n                ><Input placeholder=\"Enter Your email\" style={{height:\"55px\"}} onChange={(e) => {HandleChange(e,\"email\")}}/></Form.Item>\r\n          </div>\r\n          <div className=\"field\">\r\n              <span className=\"fa fa-lock\" />\r\n              <Form.Item\r\n                  style={{width:\"280px\",marginTop: \"20px\",marginLeft: \"46px\"}}\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your password!',\r\n                    },\r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password  placeholder=\"*************\" onChange={(e) => {HandleChange(e,\"password\")}}/>\r\n                </Form.Item>\r\n          </div>\r\n          {(error)?<h4 style={{color:\"red\"}}>You are Not Unable to Login !!</h4>:\"\"}\r\n          <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={() =>handleSubmit()}>Login</Button>\r\n            </Form.Item>\r\n          <div className=\"forgot-password\" style={{textAlign:\"center\"}}><a href=\"/\">Forgot password?</a></div>\r\n          <span className=\"logn-form-copy\">Don't have an account? <a onClick={()=>{signUp()}} className=\"login-form__sign-up\" style={{color:\"#0074d9\"}}>Sign Up</a></span>\r\n        </Form>\r\n    );\r\n  }\r\n  \r\n  const mapStateToProps =  (state) => ({\r\n    err1:state.userReducer.error1,\r\n    singleuser:state.userReducer.singleuser,\r\n    token:state.userReducer.token ? true : false\r\n\r\n  })\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    login:(email,password)=>dispatch(login(email,password))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(NewComponent);","D:\\Sem-9_Project_Movie\\ui\\src\\components\\Movie_All_Form\\addMovie.js",["242","243","244","245","246","247","248","249","250"],"import React, { useState } from 'react';\r\nimport { addmoviedata } from \"../../store/action/movieAction\";\r\nimport { connect } from 'react-redux';\r\nimport { Breadcrumb,Card,Row,Col,DatePicker,Select } from 'antd';\r\nimport moment from 'moment';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch\r\n} from 'antd';\r\n// import { Row } from 'react-bootstrap';\r\nconst {Option} = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    // span: 5,\r\n  },\r\n  wrapperCol: {\r\n    span: 10,\r\n  },\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n    offset: 4,\r\n  },\r\n};\r\n\r\nconst AddMovie = (props) => {\r\n  const { RangePicker } = DatePicker;\r\n  const [form] = Form.useForm();\r\n  const [obj, setMyObj] = useState({\r\n    moviename: \"\",\r\n    releasedate: \"\",\r\n    movie_status: \"\",\r\n    movie_category: \"\",\r\n    director_name: \"\",\r\n    Actors_name: \"\",\r\n    movie_description: \"\",\r\n    movie_type: \"\",\r\n    movie_logo: \"\",\r\n    booking_status: \"\"\r\n  })\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n        const values = await form.validateFields();\r\n        // console.log(obj);\r\n        if(obj.booking_status==\"\" || obj.movie_status==\"\"){\r\n          if(obj.movie_status==\"\"){\r\n            obj.booking_status=false;\r\n          }if(obj.booking_status==\"\"){\r\n            obj.movie_status=false;\r\n          }\r\n        }\r\n        const formdata = new FormData();\r\n        formdata.append(\"moviename\",obj.moviename);\r\n        formdata.append(\"releasedate\",obj.releasedate);\r\n        formdata.append(\"movie_status\",obj.movie_status);\r\n        formdata.append(\"movie_category\",obj.movie_category);\r\n        formdata.append(\"director_name\",obj.director_name);\r\n        formdata.append(\"Actors_name\",obj.Actors_name);\r\n        formdata.append(\"movie_description\",obj.movie_description);\r\n        formdata.append(\"movie_type\",obj.movie_type);\r\n        formdata.append(\"movie_logo\",obj.movie_logo);\r\n        formdata.append(\"booking_status\",obj.booking_status);\r\n      \r\n        console.log(obj.moviename);\r\n        await props.addmoviedata(formdata);\r\n        props.history.replace(\"/movie\");\r\n    } catch (errorInfo) {\r\n    }\r\n  }\r\n\r\n  const HandleChange = (e, name) => {\r\n    let olddata = { ...obj };\r\n    if (name == \"movie_logo\") {\r\n      const { target: { files } } = e\r\n      olddata[name] = files.length === 1 ? files[0] : files\r\n      olddata[name] = e.target.files[0];\r\n    }else if(name == \"releasedate\"){\r\n      if(e!=null){\r\n        olddata[name] = new Date(e._d).toLocaleDateString();\r\n      }\r\n    }else if((name === \"movie_type\") || (name === \"movie_category\") || (name === \"booking_status\") || (name === \"movie_status\")){\r\n        olddata[name] = e;\r\n    }else\r\n    {\r\n      olddata[name] = e.target.value;\r\n    }\r\n    setMyObj(olddata);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={\"Title\"} style={{marginTop: \"-29px\" }}>\r\n          </div>\r\n          <Breadcrumb style={{ marginTop: \"1px\",textAlign:\"right\",marginBottom:\"30px\"  }}>\r\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Movie</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Add Movie</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n            <div className=\"site-card-border-less-wrapper\">\r\n              <Card title=\"Add Movie Form\" bordered={false} style={{ width: \"auto\" }}>\r\n                      <Form form={form} name=\"AddMovie\">\r\n                      <Row gutter={0}>\r\n                          <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Movie Name:-\" name=\"moviename\" rules={[{ required: true, message: 'Please required movie name!' }]}>\r\n                              <Input type=\"text\" name=\"moviename\" onChange={(e) => { HandleChange(e, \"moviename\") }} placeholder=\"Enter moviename ...\" style={{maxWidth : \"300px\", width:\"100%\"}}/>\r\n                          </Form.Item>\r\n                          \r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Movie Category:-\" name=\"movie_category\" rules={[{ required: true, message: 'Please required movie category!' }]}>\r\n                                  <Select name=\"movie_category\" onChange={(e)=>HandleChange(e,\"movie_category\")} placeholder=\"------ Select Movie Category-----\" allowClear style={{maxWidth : \"300px\"}}>\r\n                                      <Option value=\"A\" key={\"A\"}>A</Option>\r\n                                      <Option value=\"B\" key={\"B\"}>B</Option>\r\n                                      <Option value=\"C\" key={\"C\"}>C</Option>\r\n                                      <Option value=\"D\" key={\"D\"}>D</Option>\r\n                                  </Select>\r\n                              {/* <Input type=\"text\" name=\"movie_category\" onChange={(e) => { HandleChange(e, \"movie_category\") }} placeholder=\"Enter movie_category ...\" style={{maxWidth : \"300px\", width:\"100%\"}}/> */}\r\n                          </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                      <Row gutter={0}>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Release Date:-\" name=\"releasedate\" rules={[{ required: true, message: 'Please required Releasedate!' }]}>\r\n                              <DatePicker onChange={(e) => { HandleChange(e, \"releasedate\") }} format={\"YYYY/MM/DD\"}/>\r\n                          </Form.Item>\r\n                      </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Director Name:-\" name=\"director_name\" rules={[{ required: true, message: 'Please required director name!' }]}>\r\n                              <Input type=\"text\" name=\"director_name\" onChange={(e) => { HandleChange(e, \"director_name\") }} placeholder=\"Enter director_name ...\" style={{maxWidth : \"300px\"}}/>\r\n                          </Form.Item>\r\n                          \r\n                      </Col>\r\n                      </Row>\r\n                      <Row gutter={0}>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Actors Name:-\" name=\"Actors_name\" rules={[{ required: true, message: 'Please required actors name!' }]}>\r\n                              <Input type=\"text\" name=\"Actors_name\" onChange={(e) => { HandleChange(e, \"Actors_name\") }} placeholder=\"Enter Actors ...\" style={{maxWidth : \"300px\"}}/>\r\n                          </Form.Item>\r\n                          \r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Movie Description:-\" name=\"movie_description\" rules={[{ required: true, message: 'Please required movie description!' }]}>\r\n                              <Input type=\"text\" name=\"movie_description\" onChange={(e) => { HandleChange(e, \"movie_description\") }} placeholder=\"Enter movie_description ...\" style={{maxWidth : \"300px\"}}/>\r\n                          </Form.Item>\r\n                          </Col>\r\n                      </Row>\r\n                      <Row gutter={0}>\r\n                        <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Movie Type:-\" name=\"movie_type\" rules={[{ required: true, message: 'Please required movie type!' }]}>\r\n                                  <Select name=\"movie_type\" onChange={(e)=>HandleChange(e,\"movie_type\")} placeholder=\"------ Select Movie Type-----\" allowClear style={{maxWidth : \"300px\"}}>\r\n                                      <Option value=\"Action\" key={\"Action\"}>Action</Option>\r\n                                      <Option value=\"Comedy\" key={\"Comedy\"}>Comedy</Option>\r\n                                      <Option value=\"Drama\" key={\"Drama\"}>Drama</Option>\r\n                                      <Option value=\"Fantasy\" key={\"Fantasy\"}>Fantasy</Option>\r\n                                      <Option value=\"Horror\" key={\"Horror\"}>Horror</Option>\r\n                                      <Option value=\"Mystery\" key={\"Mystery\"}>Mystery</Option>\r\n                                      <Option value=\"Romance\" key={\"Romance\"}>Romance</Option>\r\n                                      <Option value=\"Thriller\" key={\"Thriller\"}>Thriller</Option>\r\n                                      <Option value=\"Western\" key={\"Western\"}>Western</Option>\r\n                                      <Option value=\"Crime Film\" key={\"Crime Film\"}>Crime Film</Option>\r\n                                      <Option value=\"Romantic Comedy\" key={\"Romantic Comedy\"}>Romantic Comedy</Option>\r\n                                      <Option value=\"Documentary\" key={\"Documentary\"}>Documentary</Option>\r\n                                  </Select>\r\n                              {/* <Input type=\"text\" name=\"movie_type\" onChange={(e) => { HandleChange(e, \"movie_type\") }} placeholder=\"Enter movie_type...\" style={{maxWidth : \"300px\"}}/> */}\r\n                          </Form.Item>\r\n                          \r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Choice Movie Logo:-\" name=\"movie_logo\" rules={[{ required: true, message: 'Please required movie logo!' }]}>\r\n                              <Input type=\"file\" name=\"movie_logo\" onChange={(e)=>{HandleChange(e,\"movie_logo\")}} placeholder=\"Enter movie_logo ...\" style={{maxWidth : \"300px\"}}/>\r\n                          </Form.Item>\r\n                          \r\n                      </Col>\r\n                      </Row>\r\n                      <Row gutter={0}>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Select Booking Status:-\" name=\"booking_status\" valuePropName=\"checked\" >\r\n                          {/* <Form.Item label=\"Switch\"> */}\r\n                              <Switch name=\"booking_status\" onChange={(e) => { HandleChange(e, \"booking_status\") }} required/>\r\n                            {/* </Form.Item> */}\r\n                              {/* <Input type=\"text\" name=\"booking_status\" onChange={(e) => { HandleChange(e, \"booking_status\") }} placeholder=\"Enter booking_status ...\" style={{maxWidth : \"300px\"}}/> */}\r\n                          </Form.Item>\r\n                          </Col>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Select Movie Status:-\" name=\"movie_status\">\r\n                          <Switch name=\"movie_status\" onChange={(e) => { HandleChange(e, \"movie_status\") }} />\r\n                              {/* <Input type=\"text\" name=\"movie_status\" onChange={(e) => { HandleChange(e, \"movie_status\") }} placeholder=\"Enter movie_status ...\" style={{ maxWidth: \"300px\" }} /> */}\r\n                          </Form.Item>\r\n                          </Col>\r\n                      </Row>\r\n                        \r\n                           <Form.Item {...formTailLayout} label=\"\"> \r\n                                <Button type=\"primary\" onClick={(e) =>handleSubmit()} loading={props.loading}>Add Movie</Button>\r\n                          </Form.Item>                           \r\n                      </Form>\r\n              </Card>\r\n            </div>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps =  (state) => ({\r\n  loading:state.movieReducer.loading,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addmoviedata: (postdata) => dispatch(addmoviedata(postdata))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMovie);\r\n","D:\\Sem-9_Project_Movie\\ui\\src\\components\\Movie_All_Form\\movieList.js",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"import React,{useState,useEffect} from 'react';\r\n// import {Button,Card,Table,Modal,Form, Spinner }from 'react-bootstrap';\r\nimport {fetchmoviedata,updatemoviedata,singlemovieDataFetch,deletemoviedata} from '../../store/action/movieAction';\r\nimport {connect} from 'react-redux';\r\nimport '../state.css';\r\nimport { Table, Space, Button, Breadcrumb, Card, Form, Modal, Input, Row, Col,DatePicker,Switch,Select } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst {Option} = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n    offset: 4,\r\n  },\r\n};\r\n\r\nconst MovieList = (props) => {\r\n  const {form} =Form.useForm();\r\n  const [obj,setMyObj1]= useState({\r\n    _id:\"\",\r\n    moviename:\"\",\r\n    releasedate:\"\",\r\n    movie_category:\"\",\r\n    director_name:\"\",\r\n    Actors_name:\"\",\r\n    movie_description:\"\",\r\n    movie_type:\"\",\r\n    movie_logo:\"\",\r\n    movie_status:\"\",\r\n    booking_status:\"\"\r\n  })\r\n  \r\n  const [op,setOp] = useState(true);\r\n  const [ids,setIds] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [ushow, usetShow] = useState(false);\r\n  \r\n  const [error,setError] = useState({\r\n    movie_nameError:'',\r\n    IsValid:false,\r\n})\r\n  useEffect(()=>{    \r\n    props.fetchmoviedata();\r\n    if (props.singlemovie.moviename || props.singlemovie.movie_category || props.singlemovie.releasedate) {\r\n      console.log(props.singlemovie.moviename)\r\n      let olddata={...obj};\r\n      olddata.moviename = props.singlemovie.moviename;\r\n      olddata._id = props.singlemovie._id;\r\n      olddata.movie_category=props.singlemovie.movie_category;\r\n      olddata.releasedate=props.singlemovie.releasedate;\r\n      olddata.director_name=props.singlemovie.director_name;\r\n      olddata.Actors_name=props.singlemovie.Actors_name;\r\n      olddata.movie_description=props.singlemovie.movie_description;\r\n      olddata.movie_type=props.singlemovie.movie_type;\r\n      olddata.movie_logo=props.singlemovie.movie_logo;\r\n      if(props.singlemovie.movie_status==\"true\"){\r\n        olddata.movie_status=true;\r\n      }else{\r\n        olddata.movie_status=false;        \r\n      }\r\n      if(props.singlemovie.booking_status==\"true\"){\r\n        olddata.booking_status=true;\r\n      }else{\r\n        olddata.booking_status=false;\r\n      }\r\n      setMyObj1(olddata);\r\n    }\r\n  },[props.fetchmoviedata,props.singlemovie])\r\n  \r\n  const deleteHandler = async (id) =>{\r\n      await props.deletemoviedata(id);\r\n      setShow(false);\r\n  }\r\n\r\nconst SingleSubmit = async () =>{\r\n  let errors = { ...error, IsValid : true };\r\n    if(!obj.moviename || obj.moviename === \"\")\r\n    {\r\n      console.log(errors.IsValid);\r\n      if(!obj.moviename || obj.moviename === \"\"){\r\n        errors.IsValid = false;\r\n        errors.movie_nameError = \"moviename Is Required \"\r\n      }\r\n\r\n    }else{\r\n        errors.movie_nameError = \"\"\r\n    }\r\n    setError(errors);\r\n    if(errors.IsValid==true){\r\n      // const values = await form.validateFields();\r\n      console.log(obj);\r\n          const formdata = new FormData();\r\n          formdata.append(\"moviename\",obj.moviename);\r\n          formdata.append(\"releasedate\",obj.releasedate);\r\n          formdata.append(\"movie_status\",obj.movie_status);\r\n          formdata.append(\"movie_category\",obj.movie_category);\r\n          formdata.append(\"director_name\",obj.director_name);\r\n          formdata.append(\"Actors_name\",obj.Actors_name);\r\n          formdata.append(\"movie_description\",obj.movie_description);\r\n          formdata.append(\"movie_type\",obj.movie_type);\r\n          formdata.append(\"movie_logo\",obj.movie_logo);\r\n          formdata.append(\"booking_status\",obj.booking_status);\r\n        await props.updatemoviedata(obj._id,formdata);\r\n        // setOp(true);\r\n        usetShow(false);\r\n        obj._id=props.singlemovie._id;\r\n        obj.moviename=\"\";\r\n        props.history.replace(`/movie`);\r\n    }\r\n}\r\n\r\n\r\nconst handleClose = () => setShow(false);\r\nconst handleShow = (id) => {\r\n  let errors = { ...error, IsValid : true };\r\n  setError(errors);\r\n  // setOp(true);\r\n  setShow(true);\r\n  setIds(id);\r\n}\r\n\r\nconst SingleClose = () => {\r\n  let errors = { ...error, IsValid : true }; \r\n  errors.movie_nameError = \"\"\r\n  setError(errors);\r\n  // setOp(true);\r\n  obj.releasedate=\"\";\r\n  obj.booking_status=false;\r\n  obj.moviename=\"\";\r\n  props.singlemovie.moviename = \"\";\r\n  usetShow(false) \r\n};\r\n\r\n// if(props.singlemovie.moviename && !obj.moviename){\r\n//   // if(op!=false){\r\n//     setMyObj1(props.singlemovie)\r\n//   // }\r\n// }\r\nconst handleUpdate = async (_id) => {\r\n  await props.singlemovieDataFetch(_id); \r\n  usetShow(true);\r\n}\r\n const HandleChange = (e,name) =>{\r\n  let olddata = {...obj};\r\n  if (name == \"movie_logo\") {\r\n    console.log(name);\r\n    const { target: { files } } = e\r\n    olddata[name] = files.length === 1 ? files[0] : files\r\n    olddata[name] = e.target.files[0];\r\n  }else if(name == \"releasedate\"){\r\n    if(e!=null){\r\n      olddata[name] = new Date(e._d).toLocaleDateString();\r\n    }\r\n  }else if((name==\"booking_status\") || (name===\"movie_status\") || (name === \"movie_type\")  || (name === \"movie_category\")){\r\n      olddata[name]=e;\r\n  }else\r\n  {\r\n    olddata[name] = e.target.value;\r\n  }\r\n  // console.log(olddata);\r\n  // setOp(false);\r\n  setMyObj1(olddata);\r\n  console.log(obj);\r\n}\r\nconst columns = [\r\n  {\r\n    title: () => <b>Index</b>,\r\n    key: 'Index',\r\n    fixed:\"left\",\r\n    render : (text, record, index) => index+1,\r\n  },{\r\n    title: () => <b>Movie Name</b>,\r\n    dataIndex: 'moviename',\r\n    key: 'moviename',\r\n    defaultSortOrder: 'descend',\r\n    fixed:\"left\",\r\n    sorter: (a, b) => a.moviename.length - b.moviename.length,\r\n  },{\r\n    title: () => <b>Release Date</b>,\r\n    dataIndex: 'releasedate',\r\n    key: 'releasedate',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.releasedate.length - b.releasedate.length,\r\n  },{\r\n    title: () => <b>Movie Description</b>,\r\n    dataIndex: 'movie_description',\r\n    key: 'movie_description',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.movie_description.length - b.movie_description.length,\r\n  },{\r\n    title: () => <b>Director Name</b>,\r\n    dataIndex: 'director_name',\r\n    key: 'director_name',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.director_name.length - b.director_name.length,\r\n  },{\r\n    title: () => <b>Actors Name</b>,\r\n    dataIndex: 'Actors_name',\r\n    key: 'Actors_name',\r\n    defaultSortOrder: 'descend',\r\n    // sorter: (a, b) => a.Actors_name.length - b.Actors_name.length,\r\n  },{\r\n    title: () => <b>Movie Category</b>,\r\n    dataIndex: 'movie_category',\r\n    key: 'movie_category',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.movie_category.length - b.movie_category.length,\r\n  },{\r\n    title: () => <b>Movie Type</b>,\r\n    dataIndex: 'movie_type',\r\n    key: 'movie_type',\r\n    defaultSortOrder: 'descend',\r\n    // sorter: (a, b) => a.movie_type.length - b.movie_types.length,\r\n  },{\r\n    title: () => <b>Movie Status</b>,\r\n    render : (text, record, index) => <Switch name=\"movie_status\" checked={text.movie_status==\"true\"} style={{color:\"red\"}}/>,\r\n    key: 'movie_status',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.movie_status.length - b.movie_status.length,\r\n  },{\r\n    title: () => <b>Booking Status</b>,\r\n    render : (text, record, index) => text.booking_status==\"true\"?<div style={{color:\"Green\"}}>Available</div>:<div style={{color:\"Red\"}}>Not Available</div>,\r\n    key: 'booking_status',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.movie_status - b.movie_status,\r\n  },{\r\n    title: () => <b>Image</b>,\r\n    dataIndex: \"movie_logo\",\r\n    key: 'movie_logo',\r\n    defaultSortOrder: 'descend',\r\n    render:  (text,record) => <img src={\"http://localhost:3001\"+record.movie_logo} height=\"25px\" width=\"25px\" />\r\n    // sorter: (a, b) => a.movie_status - b.movie_status,\r\n  },{\r\n    title: () => <b>Update</b>,\r\n    key: 'Update',\r\n    fixed:\"right\",\r\n    render: (text, record) => (\r\n      <Space size=\"middle\">\r\n        <Button onClick={() => handleUpdate(record._id)} type=\"primary\">UPDATE</Button>\r\n      </Space>\r\n    ),\r\n  },{\r\n    title: () => <b>Delete</b>,\r\n    key: 'Delete',\r\n    fixed:\"right\",\r\n    render: (text, record) => (\r\n      <Space size=\"middle\">\r\n        <Button type=\"danger\" onClick={() => handleShow(record._id)} style={{backgroundColor:\"Red\",borderBlockColor:\"Black\",color:\"White\"}}>Delete</Button>\r\n      </Space>\r\n    ),\r\n  }\r\n];\r\n\r\n  return (\r\n    <>\r\n      <div className={\"Title\"} style={{ marginTop: \"-29px\"}}>\r\n        {/* City List */}\r\n          </div>\r\n      <Breadcrumb style={{ marginTop: \"1px\",textAlign:\"right\",marginBottom:\"29px\" }}>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item>Movie</Breadcrumb.Item>\r\n        <Breadcrumb.Item>View Movie List</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"site-card-border-less-wrapper\">\r\n        <Card title=\"View Movie List\" bordered={true} style={{ width: \"auto\",border:\"5px\" }}>\r\n          <Table columns={columns} dataSource={props.movies} pagination={{ pageSize: 4 }} scroll={{ x: 1300 }}/>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Update Record */}\r\n      <Modal title=\"Update State\"\r\n        visible={ushow}\r\n        onOk={() => SingleSubmit()}\r\n        onCancel={() => SingleClose()}>\r\n       <Form>\r\n                      <Row gutter={0}>\r\n                          <Col span={12} >\r\n                              <Input type=\"hidden\" name=\"_id\" value={obj._id} onChange={(e) => { HandleChange(e, \"_id\") }}/>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Movie Name:-\" \r\n                                      hasFeedback\r\n                                      validateStatus={(error.movie_nameError)?\"error\":\"success\"}\r\n                                      help={error.movie_nameError}\r\n                                      style={{width: \"400px\"}}>\r\n                              <Input type=\"text\" name=\"moviename\" value={obj.moviename} onChange={(e) => { HandleChange(e, \"moviename\") }} placeholder=\"Enter moviename ...\" style={{maxWidth : \"300px\", width:\"100%\"}}/>\r\n                          </Form.Item>\r\n                          \r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Movie Category:-\" rules={[{ required: true, message: 'Please required movie category!' }]} style={{width: \"400px\"}}>\r\n                                  <Select name=\"movie_category\" value={obj.movie_category} onChange={(e)=>HandleChange(e,\"movie_category\")} placeholder=\"------ Select Movie Category-----\" allowClear style={{maxWidth : \"300px\"}}>\r\n                                      <Option value=\"A\" key={\"A\"}>A</Option>\r\n                                      <Option value=\"B\" key={\"B\"}>B</Option>\r\n                                      <Option value=\"C\" key={\"C\"}>C</Option>\r\n                                      <Option value=\"D\" key={\"D\"}>D</Option>\r\n                                  </Select>\r\n                              {/* <Input type=\"text\" name=\"movie_category\" value={obj.movie_category} onChange={(e) => { HandleChange(e, \"movie_category\") }} placeholder=\"Enter movie_category ...\" style={{maxWidth : \"300px\", width:\"100%\"}}/> */}\r\n                          </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                      <Row gutter={0}>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Release Date:-\" rules={[{ required: true, message: 'Please required Releasedate!' }]} style={{width: \"400px\"}}>\r\n                              <DatePicker name=\"releasedate\" onChange={(e) => { HandleChange(e, \"releasedate\") }} value={moment(obj.releasedate,\"MM/DD/ YYYY\")} />\r\n                          </Form.Item>\r\n                      </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Director Name:-\" rules={[{ required: true, message: 'Please required director name!' }]} style={{width: \"400px\"}}>\r\n                              <Input type=\"text\" name=\"director_name\" value={obj.director_name} onChange={(e) => { HandleChange(e, \"director_name\") }} placeholder=\"Enter director_name ...\" style={{maxWidth : \"300px\"}}/>\r\n                          </Form.Item>\r\n                          \r\n                      </Col>\r\n                      </Row>\r\n                      <Row gutter={0}>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Actors Name:-\" rules={[{ required: true, message: 'Please required actors name!' }]} style={{width: \"400px\"}}>\r\n                              <Input type=\"text\" name=\"Actors_name\" value={obj.Actors_name} onChange={(e) => { HandleChange(e, \"Actors_name\") }} placeholder=\"Enter Actors ...\" style={{maxWidth : \"300px\"}}/>\r\n                          </Form.Item>\r\n                          \r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Movie Description:-\" rules={[{ required: true, message: 'Please required movie description!' }]} style={{width: \"400px\"}}>\r\n                              <Input type=\"text\" name=\"movie_description\" value={obj.movie_description} onChange={(e) => { HandleChange(e, \"movie_description\") }} placeholder=\"Enter movie_description ...\" style={{maxWidth : \"300px\"}}/>\r\n                          </Form.Item>\r\n                          </Col>\r\n                      </Row>\r\n                      <Row gutter={0}>\r\n                        <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Movie Type:-\" rules={[{ required: true, message: 'Please required movie type!' }]} style={{width: \"400px\"}}>\r\n                          <Select name=\"movie_type\" value={obj.movie_type} onChange={(e)=>HandleChange(e,\"movie_type\")} placeholder=\"------ Select Movie Type-----\" allowClear style={{maxWidth : \"300px\"}}>\r\n                                      <Option value=\"Action\" key={\"Action\"}>Action</Option>\r\n                                      <Option value=\"Comedy\" key={\"Comedy\"}>Comedy</Option>\r\n                                      <Option value=\"Drama\" key={\"Drama\"}>Drama</Option>\r\n                                      <Option value=\"Fantasy\" key={\"Fantasy\"}>Fantasy</Option>\r\n                                      <Option value=\"Horror\" key={\"Horror\"}>Horror</Option>\r\n                                      <Option value=\"Mystery\" key={\"Mystery\"}>Mystery</Option>\r\n                                      <Option value=\"Romance\" key={\"Romance\"}>Romance</Option>\r\n                                      <Option value=\"Thriller\" key={\"Thriller\"}>Thriller</Option>\r\n                                      <Option value=\"Western\" key={\"Western\"}>Western</Option>\r\n                                      <Option value=\"Crime Film\" key={\"Crime Film\"}>Crime Film</Option>\r\n                                      <Option value=\"Romantic Comedy\" key={\"Romantic Comedy\"}>Romantic Comedy</Option>\r\n                                      <Option value=\"Documentary\" key={\"Documentary\"}>Documentary</Option>\r\n                                  </Select>\r\n                              {/* <Input type=\"text\" name=\"movie_type\" value={obj.movie_type} onChange={(e) => { HandleChange(e, \"movie_type\") }} placeholder=\"Enter movie_type...\" style={{maxWidth : \"300px\"}}/> */}\r\n                          </Form.Item>\r\n                          \r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Choice Movie Logo:-\" style={{width: \"400px\"}}>\r\n                              <Input type=\"file\" name=\"movie_logo\"  onChange={(e)=>{HandleChange(e,\"movie_logo\")}} placeholder=\"Enter movie_logo ...\" style={{maxWidth : \"100px\"}}>\r\n                              </Input>\r\n                          </Form.Item>\r\n                                <img src={\"http://localhost:3001\"+obj.movie_logo} height=\"25px\" width=\"25px\" />\r\n                          \r\n                      </Col>\r\n                      </Row>\r\n                      <Row gutter={0}>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Movie Status:-\">\r\n                          <Switch name=\"movie_status\" checked={Boolean(obj.movie_status)==true} onChange={(e) => { HandleChange(e, \"movie_status\") }}  style={{ maxWidth: \"300px\" }}/>\r\n                              {/* <Input type=\"text\" name=\"movie_status\" value={obj.movie_status} onChange={(e) => { HandleChange(e, \"movie_status\") }} placeholder=\"Enter movie_status ...\" style={{ maxWidth: \"300px\" }} /> */}\r\n                          </Form.Item>\r\n                          </Col>\r\n                      <Col span={12}>\r\n                          <Form.Item {...formItemLayout} label=\"Enter Booking Status:-\">\r\n                            <Switch name=\"booking_status\" checked={Boolean(obj.booking_status)==true} onChange={(e) => { HandleChange(e, \"booking_status\") }}  style={{ maxWidth: \"300px\" }}>\r\n                                \r\n                            </Switch>\r\n                              {/* <Input type=\"text\" name=\"booking_status\" value={obj.booking_status} onChange={(e) => { HandleChange(e, \"booking_status\") }} placeholder=\"Enter booking_status ...\" style={{maxWidth : \"300px\"}}/> */}\r\n                          </Form.Item>\r\n                          </Col>\r\n                      </Row>                          \r\n                      </Form>\r\n      </Modal>\r\n\r\n      {/* Delete Record  */}\r\n      <Modal title=\"Are you sure!\"\r\n        visible={show}\r\n        onOk={() => deleteHandler(ids)}\r\n        onCancel={() => handleClose()}>\r\n        Do you want to delete this state?\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps =  (state) => ({\r\n  err:state.movieReducer.error,\r\n  Loading:state.movieReducer.loading,\r\n  movies:state.movieReducer.movies,\r\n  singlemovie:state.movieReducer.singlemovie,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    fetchmoviedata:()=>dispatch(fetchmoviedata()),\r\n    deletemoviedata:(_id)=>dispatch(deletemoviedata(_id)),\r\n    updatemoviedata:(postdata,put) => dispatch(updatemoviedata(postdata,put)),\r\n    singlemovieDataFetch:(id)=>dispatch(singlemovieDataFetch(id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieList);","D:\\Sem-9_Project_Movie\\ui\\src\\store\\action\\movieAction.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\movieActionTypes.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\movieReducer.js",["268"],"import * as actionTypes from \"../movieActionTypes\";\r\nconst initalstore ={\r\n    movies:[],\r\n    singlemovie:{},\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nconst store = (state = initalstore,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.INIT_FETCH_MOVIES:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n            }\r\n        case actionTypes.FETCH_MOVIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                movies:action.movies\r\n            }\r\n\r\n        case actionTypes.FETCH_MOVIES_FAILED:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:action.error,\r\n            }\r\n        case actionTypes.INIT_ADD_MOVIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.ADD_MOVIES_SUCCESS:\r\n                return{\r\n                    ...state,\r\n                    loading:false                  \r\n                }\r\n        case actionTypes.ADD_MOVIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_DELETE_MOVIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n    \r\n                    };\r\n        case actionTypes.DELETE_MOVIES_SUCCESS:\r\n                let moviessd= state.movies.filter(movies1 => movies1._id !== action.id);\r\n                return{\r\n                    ...state,\r\n                    loading:false,   \r\n                    movies:moviessd,\r\n                }\r\n        case actionTypes.DELETE_MOVIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_SINGLE_MOVIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,    \r\n                    };\r\n        case actionTypes.SINGLE_MOVIES_SUCCESS:\r\n            console.log(action.singlemovie)\r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    singlemovie:action.singlemovie             \r\n                }\r\n        case actionTypes.SINGLE_MOVIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n        case actionTypes.INIT_UPDATE_MOVIES:\r\n                    return{\r\n                        ...state,\r\n                        loading:true,\r\n                    };\r\n        case actionTypes.UPDATE_MOVIES_SUCCESS:\r\n            let statesst = [...state.movies];\r\n            statesst.map(order => {\r\n                if(order._id === action.movies._id)\r\n                {\r\n                    order.moviename = action.movies.moviename;\r\n                    order.movie_category=action.movies.movie_category;\r\n                    order.releasedate=action.movies.releasedate;\r\n                    order.director_name=action.movies.director_name;\r\n                    order.Actors_name=action.movies.Actors_name; \r\n                    order.movie_description=action.movies.movie_description;\r\n                    order.movie_type=action.movies.movie_type;\r\n                    order.movie_logo=action.movies.movie_logo;\r\n                    order.movie_status=action.movies.movie_status;\r\n                    order.booking_status=action.movies.booking_status;                   \r\n                }\r\n            });\r\n            console.log(action.singlestates);\r\n                return{\r\n                    ...state,\r\n                    loading:false, \r\n                    movies:statesst             \r\n                }\r\n        case actionTypes.UPDATE_MOVIES_FAILED:\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    error:action.error\r\n                }\r\n            default :\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default store;","D:\\Sem-9_Project_Movie\\ui\\src\\store\\reducer\\userReducer.js",[],"D:\\Sem-9_Project_Movie\\ui\\src\\components\\Users_Theater_List\\allUsersList.js",["269","270","271","272","273"],"import React,{useEffect,useState} from 'react';\r\nimport {getAllUser,fetchProfile,updateProfile} from '../../store/action/userAction';\r\nimport {connect} from 'react-redux';\r\nimport '../state.css';\r\nimport { Table, Breadcrumb, Card,Space,Button,Modal } from 'antd';\r\nconst AllUsersList = (props) => {\r\n  \r\n  const [show, setShow] = useState(false);\r\n  const [ids, setIds] = useState(false);  \r\n  useEffect(()=>{  \r\n      props.getAllUser();\r\n    },[props.getAllUser,props.singleuser1])\r\n\r\n  const [obj,setMyObj] = useState({\r\n    user_name:\"\",\r\n    password:\"\",\r\n    email:\"\",\r\n    gender:\"Male\",\r\n    photo1:\"\",\r\n    state_id:\"\",\r\n    city_id:\"\",\r\n    group_id:\"\",\r\n    is_active:\"\"\r\n  });\r\n  if(ids==true){\r\n        setIds(false);\r\n  }\r\n\r\n  if (obj.user_name!=\"\"){\r\n  }\r\n  const deleteHandler = async (id) => {\r\n    if(props.singleuser1.user_name){\r\n        let olddata={...obj};\r\n        olddata._id=props.singleuser1._id;\r\n        olddata.user_name = props.singleuser1.user_name;\r\n        olddata.password = props.singleuser1.password;\r\n        olddata.email = props.singleuser1.email;\r\n        olddata.gender = props.singleuser1.gender;\r\n        olddata.state_id = props.singleuser1.state_id;\r\n        olddata.photo1 = props.singleuser1.photo1;\r\n        olddata.city_id = props.singleuser1.city_id;\r\n        olddata.group_id = props.singleuser1.group_id;\r\n            if(props.singleuser1.is_active==\"1\"){ \r\n              olddata.is_active = \"0\";\r\n            }else{\r\n              olddata.is_active = \"1\";\r\n            }\r\n            setMyObj(olddata);\r\n            console.log(olddata);\r\n            props.updateProfile(olddata._id,olddata);\r\n    }\r\n    setShow(false);\r\n  }\r\n\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = async (id) => {\r\n    await props.fetchProfile(id);\r\n    setShow(true);\r\n    setIds(id);\r\n  }\r\n\r\nconst columns = [\r\n  {\r\n    title: () => <b>Index</b>,\r\n    key: 'Index',\r\n    fixed:\"left\",\r\n    render : (text, record, index) => index+1,\r\n  },{\r\n    title: () => <b>User Name</b>,\r\n    dataIndex: 'user_name',\r\n    key: 'user_name',\r\n    defaultSortOrder: 'descend',\r\n    fixed:\"left\",\r\n    sorter: (a, b) => a.user_name.length - b.user_name.length,\r\n  },{\r\n    title: () => <b>Email</b>,\r\n    dataIndex: 'email',\r\n    key: 'email',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.email.length - b.email.length,\r\n  },{\r\n    title: () => <b>Gender</b>,\r\n    dataIndex: 'gender',\r\n    key: 'gender',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.gender.length - b.gender.length,\r\n  },{\r\n      title: () => <b>City Name</b>,\r\n      key: 'city_id',\r\n      defaultSortOrder: 'descend',\r\n      render: s => s.city_id.city_name,\r\n      sorter: (a, b) => a.city_id.city_name.length - b.city_id.city_name.length,\r\n},{\r\n    title: () => <b>State Name</b>,\r\n    key: 'state_id',\r\n    defaultSortOrder: 'descend',\r\n    render: s => s.state_id.state_name,\r\n    sorter: (a, b) => a.state_id.state_name.length - b.state_id.state_name.length,\r\n  },{\r\n    title: () => <b>Status</b>,\r\n    key: 'is_active',\r\n    defaultSortOrder: 'descend',\r\n    // render: ,\r\n    render: (text, record) => (\r\n      <Space size=\"middle\">\r\n        {record.is_active==\"1\"?<Button type='danger' onClick={() => handleShow(record._id)} style={{ backgroundColor: '#005f00', borderBlockColor: 'Black', color: 'White' }}>Active</Button>:<Button type='danger' onClick={() => handleShow(record._id)} style={{ backgroundColor: '#820000', borderBlockColor: 'Black', color: 'White' }}>Block</Button>}\r\n        {/* <Button type=\"danger\" onClick={() => handleShow(record._id)} style={{ backgroundColor: \"Green\", borderBlockColor: \"Black\", color: \"White\" }}>{record.is_active==\"1\"?\"Active\":\"Block\"}</Button> */}\r\n      </Space>\r\n    ),\r\n  }\r\n];\r\n\r\n  return (\r\n    <>\r\n      <div className={\"Title\"} style={{ marginTop: \"-29px\"}}>\r\n          </div>\r\n      <Breadcrumb style={{ marginTop: \"1px\",textAlign:\"right\",marginBottom:\"29px\" }}>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item>All User</Breadcrumb.Item>\r\n        <Breadcrumb.Item>View Users List</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"site-card-border-less-wrapper\">\r\n        <Card title=\"View Users List\" bordered={true} style={{ width: \"auto\",border:\"5px\" }}>\r\n          <Table columns={columns} dataSource={props.users} pagination={{ pageSize: 4 }} />\r\n        </Card>\r\n      </div>\r\n\r\n      <Modal title=\"Are you sure!\"\r\n        visible={show}\r\n        onOk={() => deleteHandler(ids)}\r\n        onCancel={() => handleClose()}>\r\n        Do you want to change this state?\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps =  (state) => ({\r\n  err:state.movieReducer.error,\r\n  users:state.userReducer.users,\r\n  singleuser1:state.userReducer.singleuser1\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    updateProfile:(_id,put)=>dispatch(updateProfile(_id,put)),\r\n    fetchProfile:(_id)=>dispatch(fetchProfile(_id)),\r\n    getAllUser:()=>dispatch(getAllUser())\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AllUsersList);","D:\\Sem-9_Project_Movie\\ui\\src\\components\\Users_Theater_List\\allTheaterList.js",["274","275","276","277"],"import React,{useEffect,useState} from 'react';\r\nimport {getAllTheater,fetchProfile,updateProfile} from '../../store/action/userAction';\r\nimport {connect} from 'react-redux';\r\nimport '../state.css';\r\nimport { Table, Breadcrumb, Card,Space,Button,Modal } from 'antd';\r\nconst AllUsersList = (props) => {\r\n  \r\n  const [show, setShow] = useState(false);\r\n  const [ids, setIds] = useState(false);  \r\n  useEffect(()=>{  \r\n      props.getAllTheater();\r\n    },[props.getAllTheater,props.singleuser1])\r\n\r\n  const [obj,setMyObj] = useState({\r\n    user_name:\"\",\r\n    password:\"\",\r\n    email:\"\",\r\n    gender:\"Male\",\r\n    photo1:\"\",\r\n    state_id:\"\",\r\n    city_id:\"\",\r\n    group_id:\"\",\r\n    is_active:\"\"\r\n  });\r\n  if(ids==true){\r\n        setIds(false);\r\n  }\r\n\r\n  const deleteHandler = async (id) => {\r\n    if(props.singleuser1.user_name){\r\n        let olddata={...obj};\r\n        olddata._id=props.singleuser1._id;\r\n        olddata.user_name = props.singleuser1.user_name;\r\n        olddata.password = props.singleuser1.password;\r\n        olddata.email = props.singleuser1.email;\r\n        olddata.gender = props.singleuser1.gender;\r\n        olddata.state_id = props.singleuser1.state_id;\r\n        olddata.photo1 = props.singleuser1.photo1;\r\n        olddata.city_id = props.singleuser1.city_id;\r\n        olddata.group_id = props.singleuser1.group_id;\r\n            if(props.singleuser1.is_active==\"1\"){ \r\n              olddata.is_active = \"0\";\r\n            }else{\r\n              olddata.is_active = \"1\";\r\n            }\r\n            setMyObj(olddata);\r\n            console.log(olddata);\r\n            props.updateProfile(olddata._id,olddata);\r\n    }\r\n    setShow(false);\r\n  }\r\n\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = async (id) => {\r\n    await props.fetchProfile(id);\r\n    setShow(true);\r\n    setIds(id);\r\n  }\r\n\r\nconst columns = [\r\n  {\r\n    title: () => <b>Index</b>,\r\n    key: 'Index',\r\n    fixed:\"left\",\r\n    render : (text, record, index) => index+1,\r\n  },{\r\n    title: () => <b>User Name</b>,\r\n    dataIndex: 'user_name',\r\n    key: 'user_name',\r\n    defaultSortOrder: 'descend',\r\n    fixed:\"left\",\r\n    sorter: (a, b) => a.user_name.length - b.user_name.length,\r\n  },{\r\n    title: () => <b>Email</b>,\r\n    dataIndex: 'email',\r\n    key: 'email',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.email.length - b.email.length,\r\n  },{\r\n    title: () => <b>Gender</b>,\r\n    dataIndex: 'gender',\r\n    key: 'gender',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.gender.length - b.gender.length,\r\n  },{\r\n      title: () => <b>City Name</b>,\r\n      key: 'city_id',\r\n      defaultSortOrder: 'descend',\r\n      render: s => s.city_id.city_name,\r\n      sorter: (a, b) => a.city_id.city_name.length - b.city_id.city_name.length,\r\n},{\r\n    title: () => <b>State Name</b>,\r\n    key: 'state_id',\r\n    defaultSortOrder: 'descend',\r\n    render: s => s.state_id.state_name,\r\n    sorter: (a, b) => a.state_id.state_name.length - b.state_id.state_name.length,\r\n  },{\r\n    title: () => <b>Status</b>,\r\n    key: 'is_active',\r\n    defaultSortOrder: 'descend',\r\n    // render: ,\r\n    render: (text, record) => (\r\n      <Space size=\"middle\">\r\n        {record.is_active==\"1\"?<Button type='danger' onClick={() => handleShow(record._id)} style={{ backgroundColor: '#005f00', borderBlockColor: 'Black', color: 'White' }}>Active</Button>:<Button type='danger' onClick={() => handleShow(record._id)} style={{ backgroundColor: '#820000', borderBlockColor: 'Black', color: 'White' }}>Block</Button>}\r\n      </Space>\r\n    ),\r\n  }\r\n];\r\n\r\n  return (\r\n    <>\r\n      <div className={\"Title\"} style={{ marginTop: \"-29px\"}}>\r\n          </div>\r\n      <Breadcrumb style={{ marginTop: \"1px\",textAlign:\"right\",marginBottom:\"29px\" }}>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item>All Theater</Breadcrumb.Item>\r\n        <Breadcrumb.Item>View Theaters List</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"site-card-border-less-wrapper\">\r\n        <Card title=\"View Theaters List\" bordered={true} style={{ width: \"auto\",border:\"5px\" }}>\r\n          <Table columns={columns} dataSource={props.users} pagination={{ pageSize: 4 }} />\r\n        </Card>\r\n      </div>\r\n\r\n      <Modal title=\"Are you sure!\"\r\n        visible={show}\r\n        onOk={() => deleteHandler(ids)}\r\n        onCancel={() => handleClose()}>\r\n        Do you want to change this state?\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps =  (state) => ({\r\n  err:state.movieReducer.error,\r\n  users:state.userReducer.users,\r\n  singleuser1:state.userReducer.singleuser1\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    updateProfile:(_id,put)=>dispatch(updateProfile(_id,put)),\r\n    fetchProfile:(_id)=>dispatch(fetchProfile(_id)),\r\n    getAllTheater:()=>dispatch(getAllTheater())\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AllUsersList);","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\dashboard.js",["278","279","280","281","282"],"import React, { Component, useEffect } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {fetchDashboradRecord} from '../../store/action/userAction';\r\nimport {  Row, Col,Card, CardGroup,CardDeck } from \"react-bootstrap\";\r\n// import {MDBIcon} from 'react/jsx'\r\nimport { SiApachesolr,SiAtAndT,SiAdobecreativecloud,SiCoffeescript } from \"react-icons/si\";\r\n\r\nconst Dashboard = (props) => {\r\n  useEffect(() => {\r\n    props.fetchDashboradRecord();\r\n    console.log(props.singleDashboard);\r\n  },[props.fetchDashboradRecord]);\r\n\r\n  // render: function() {\r\n    return (\r\n      <>\r\n      <div >\r\n      <CardDeck style={{    display: \"flex\"}}>\r\n    <Card border=\"Primary\" style={{ width: '18rem',backgroundColor:\"#1e9ee8\",color:\"White\",padding:\"20px\",\r\n    marginLeft: \"20px\" }} >\r\n      <Card.Header>Total State</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title></Card.Title>\r\n        <Card.Text style={{fontSize: \"24px\",marginTop: \"6px\"}}>{props.singleDashboard.States}</Card.Text>\r\n        <SiCoffeescript style={{fontSize: \"65px\",marginLeft: \"131px\", marginTop: \"-54px\"}}/>\r\n      </Card.Body>\r\n    </Card>\r\n    <Card border=\"Success\" style={{ width: '18rem',backgroundColor:\"#b9ad16\",color:\"White\",marginLeft: \"20px\",padding:\"20px\" }} >\r\n      <Card.Header>Total City</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title></Card.Title>\r\n        <Card.Text style={{fontSize: \"24px\",marginTop: \"6px\"}}>{props.singleDashboard.Citys}</Card.Text>\r\n        <SiAtAndT style={{fontSize: \"65px\",marginLeft: \"131px\", marginTop: \"-54px\"}}/>  \r\n      </Card.Body>\r\n    </Card>\r\n    <Card border=\"Success\" style={{ width: '18rem',backgroundColor:\"#25b125\",color:\"White\",marginLeft: \"20px\",padding:\"20px\" }} >\r\n      <Card.Header>Total Movies</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title></Card.Title>\r\n        <Card.Text style={{fontSize: \"24px\",marginTop: \"6px\"}}>{props.singleDashboard.Movies}</Card.Text>\r\n        <SiApachesolr style={{fontSize: \"65px\",marginLeft: \"131px\", marginTop: \"-54px\"}}/>        \r\n      </Card.Body>\r\n    </Card>\r\n    <Card bg=\"danger\" style={{ width: '18rem',backgroundColor:\"#f52e2e\",color:\"White\",marginLeft: \"20px\",padding:\"20px\" }} >\r\n      <Card.Header>Total Theater</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title></Card.Title>\r\n        <Card.Text style={{fontSize: \"24px\",marginTop: \"6px\"}}>{props.singleDashboard.Theaters}</Card.Text>\r\n        <SiAdobecreativecloud style={{fontSize: \"65px\",marginLeft: \"131px\", marginTop: \"-54px\"}}/>  \r\n      </Card.Body>\r\n    </Card>\r\n    </CardDeck>\r\n    </div>\r\n     </>\r\n    );\r\n}\r\nconst mapStateToProps =  (state) => ({\r\n  err:state.userReducer.error,\r\n  Loading:state.userReducer.loading,\r\n  singleDashboard:state.userReducer.singleDashboard,\r\n})\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    fetchDashboradRecord:()=>dispatch(fetchDashboradRecord())\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard);","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\Temp.js",["283","284","285","286","287"],"import React, { Component, useEffect } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {fetchDashboradRecord} from '../../store/action/userAction';\r\nimport {  Row, Col,Card, CardGroup,CardDeck } from \"react-bootstrap\";\r\n// import {MDBIcon} from 'react/jsx'\r\nimport { SiApachesolr,SiAtAndT,SiAdobecreativecloud,SiCoffeescript } from \"react-icons/si\";\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  // render: function() {\r\n    return (\r\n      <>\r\n      <div >\r\n      <CardDeck style={{    display: \"flex\"}}>\r\n    <Card border=\"Primary\" style={{ width: '18rem',backgroundColor:\"#1e9ee8\",color:\"White\",padding:\"20px\",\r\n    marginLeft: \"20px\" }} >\r\n      <Card.Header>Total State</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title></Card.Title>\r\n        <Card.Text style={{fontSize: \"24px\",marginTop: \"6px\"}}></Card.Text>\r\n        <SiCoffeescript style={{fontSize: \"65px\",marginLeft: \"131px\", marginTop: \"-54px\"}}/>\r\n      </Card.Body>\r\n    </Card>\r\n    <Card border=\"Success\" style={{ width: '18rem',backgroundColor:\"#b9ad16\",color:\"White\",marginLeft: \"20px\",padding:\"20px\" }} >\r\n      <Card.Header>Total City</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title></Card.Title>\r\n        <Card.Text style={{fontSize: \"24px\",marginTop: \"6px\"}}></Card.Text>\r\n        <SiAtAndT style={{fontSize: \"65px\",marginLeft: \"131px\", marginTop: \"-54px\"}}/>  \r\n      </Card.Body>\r\n    </Card>\r\n    <Card border=\"Success\" style={{ width: '18rem',backgroundColor:\"#25b125\",color:\"White\",marginLeft: \"20px\",padding:\"20px\" }} >\r\n      <Card.Header>Total Movies</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title></Card.Title>\r\n        <Card.Text style={{fontSize: \"24px\",marginTop: \"6px\"}}></Card.Text>\r\n        <SiApachesolr style={{fontSize: \"65px\",marginLeft: \"131px\", marginTop: \"-54px\"}}/>        \r\n      </Card.Body>\r\n    </Card>\r\n    <Card bg=\"danger\" style={{ width: '18rem',backgroundColor:\"#f52e2e\",color:\"White\",marginLeft: \"20px\",padding:\"20px\" }} >\r\n      <Card.Header>Total Theater</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title></Card.Title>\r\n        <Card.Text style={{fontSize: \"24px\",marginTop: \"6px\"}}></Card.Text>\r\n        <SiAdobecreativecloud style={{fontSize: \"65px\",marginLeft: \"131px\", marginTop: \"-54px\"}}/>  \r\n      </Card.Body>\r\n    </Card>\r\n    </CardDeck>\r\n    </div>\r\n     </>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    fetchDashboradRecord:()=>dispatch(fetchDashboradRecord())\r\n  }\r\n}\r\nexport default connect(null,mapDispatchToProps)(Dashboard);","D:\\Sem-9_Project_Movie\\ui\\src\\components\\All Registration form\\Temp1.js",["288","289","290","291","292"],{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":91,"column":32,"nodeType":"299","messageId":"300","endLine":91,"endColumn":34},{"ruleId":"301","severity":1,"message":"302","line":33,"column":28,"nodeType":"303","messageId":"304","endLine":33,"endColumn":30},{"ruleId":"305","severity":1,"message":"306","line":41,"column":9,"nodeType":"307","endLine":41,"endColumn":20,"suggestions":"308"},{"ruleId":"301","severity":1,"message":"302","line":72,"column":38,"nodeType":"303","messageId":"304","endLine":72,"endColumn":40},{"ruleId":"301","severity":1,"message":"302","line":73,"column":38,"nodeType":"303","messageId":"304","endLine":73,"endColumn":40},{"ruleId":"301","severity":1,"message":"309","line":84,"column":30,"nodeType":"303","messageId":"304","endLine":84,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":121,"column":37,"nodeType":"312","endLine":121,"endColumn":111},{"ruleId":"313","severity":1,"message":"314","line":5,"column":10,"nodeType":"315","messageId":"316","endLine":5,"endColumn":14},{"ruleId":"313","severity":1,"message":"317","line":6,"column":10,"nodeType":"315","messageId":"316","endLine":6,"endColumn":23},{"ruleId":"313","severity":1,"message":"318","line":6,"column":25,"nodeType":"315","messageId":"316","endLine":6,"endColumn":33},{"ruleId":"313","severity":1,"message":"319","line":7,"column":10,"nodeType":"315","messageId":"316","endLine":7,"endColumn":24},{"ruleId":"305","severity":1,"message":"320","line":31,"column":6,"nodeType":"307","endLine":31,"endColumn":46,"suggestions":"321"},{"ruleId":"301","severity":1,"message":"309","line":49,"column":22,"nodeType":"303","messageId":"304","endLine":49,"endColumn":24},{"ruleId":"313","severity":1,"message":"322","line":39,"column":13,"nodeType":"315","messageId":"316","endLine":39,"endColumn":19},{"ruleId":"293","replacedBy":"323"},{"ruleId":"295","replacedBy":"324"},{"ruleId":"297","severity":1,"message":"298","line":91,"column":36,"nodeType":"299","messageId":"300","endLine":91,"endColumn":38},{"ruleId":"313","severity":1,"message":"325","line":30,"column":10,"nodeType":"315","messageId":"316","endLine":30,"endColumn":12},{"ruleId":"305","severity":1,"message":"320","line":46,"column":6,"nodeType":"307","endLine":46,"endColumn":70,"suggestions":"326"},{"ruleId":"301","severity":1,"message":"309","line":71,"column":24,"nodeType":"303","messageId":"304","endLine":71,"endColumn":26},{"ruleId":"301","severity":1,"message":"302","line":140,"column":14,"nodeType":"303","messageId":"304","endLine":140,"endColumn":16},{"ruleId":"313","severity":1,"message":"327","line":3,"column":9,"nodeType":"315","messageId":"316","endLine":3,"endColumn":12},{"ruleId":"313","severity":1,"message":"328","line":3,"column":13,"nodeType":"315","messageId":"316","endLine":3,"endColumn":16},{"ruleId":"313","severity":1,"message":"329","line":3,"column":17,"nodeType":"315","messageId":"316","endLine":3,"endColumn":22},{"ruleId":"313","severity":1,"message":"330","line":3,"column":23,"nodeType":"315","messageId":"316","endLine":3,"endColumn":32},{"ruleId":"313","severity":1,"message":"331","line":9,"column":33,"nodeType":"315","messageId":"316","endLine":9,"endColumn":38},{"ruleId":"313","severity":1,"message":"332","line":41,"column":12,"nodeType":"315","messageId":"316","endLine":41,"endColumn":17},{"ruleId":"313","severity":1,"message":"333","line":41,"column":18,"nodeType":"315","messageId":"316","endLine":41,"endColumn":26},{"ruleId":"313","severity":1,"message":"334","line":46,"column":8,"nodeType":"315","messageId":"316","endLine":46,"endColumn":12},{"ruleId":"313","severity":1,"message":"335","line":47,"column":8,"nodeType":"315","messageId":"316","endLine":47,"endColumn":11},{"ruleId":"313","severity":1,"message":"336","line":49,"column":7,"nodeType":"315","messageId":"316","endLine":49,"endColumn":18},{"ruleId":"313","severity":1,"message":"337","line":50,"column":7,"nodeType":"315","messageId":"316","endLine":50,"endColumn":17},{"ruleId":"313","severity":1,"message":"338","line":54,"column":7,"nodeType":"315","messageId":"316","endLine":54,"endColumn":20},{"ruleId":"305","severity":1,"message":"339","line":62,"column":7,"nodeType":"307","endLine":62,"endColumn":29,"suggestions":"340"},{"ruleId":"313","severity":1,"message":"322","line":66,"column":15,"nodeType":"315","messageId":"316","endLine":66,"endColumn":21},{"ruleId":"301","severity":1,"message":"302","line":79,"column":14,"nodeType":"303","messageId":"304","endLine":79,"endColumn":16},{"ruleId":"313","severity":1,"message":"341","line":4,"column":21,"nodeType":"315","messageId":"316","endLine":4,"endColumn":35},{"ruleId":"313","severity":1,"message":"342","line":7,"column":10,"nodeType":"315","messageId":"316","endLine":7,"endColumn":22},{"ruleId":"313","severity":1,"message":"343","line":7,"column":24,"nodeType":"315","messageId":"316","endLine":7,"endColumn":30},{"ruleId":"313","severity":1,"message":"344","line":7,"column":32,"nodeType":"315","messageId":"316","endLine":7,"endColumn":38},{"ruleId":"313","severity":1,"message":"345","line":7,"column":40,"nodeType":"315","messageId":"316","endLine":7,"endColumn":46},{"ruleId":"313","severity":1,"message":"346","line":7,"column":48,"nodeType":"315","messageId":"316","endLine":7,"endColumn":55},{"ruleId":"313","severity":1,"message":"347","line":7,"column":57,"nodeType":"315","messageId":"316","endLine":7,"endColumn":65},{"ruleId":"305","severity":1,"message":"348","line":13,"column":5,"nodeType":"307","endLine":13,"endColumn":27,"suggestions":"349"},{"ruleId":"301","severity":1,"message":"309","line":48,"column":21,"nodeType":"303","messageId":"304","endLine":48,"endColumn":23},{"ruleId":"301","severity":1,"message":"309","line":48,"column":42,"nodeType":"303","messageId":"304","endLine":48,"endColumn":44},{"ruleId":"301","severity":1,"message":"309","line":48,"column":65,"nodeType":"303","messageId":"304","endLine":48,"endColumn":67},{"ruleId":"301","severity":1,"message":"309","line":48,"column":87,"nodeType":"303","messageId":"304","endLine":48,"endColumn":89},{"ruleId":"301","severity":1,"message":"309","line":48,"column":106,"nodeType":"303","messageId":"304","endLine":48,"endColumn":108},{"ruleId":"301","severity":1,"message":"302","line":48,"column":125,"nodeType":"303","messageId":"304","endLine":48,"endColumn":127},{"ruleId":"301","severity":1,"message":"309","line":49,"column":23,"nodeType":"303","messageId":"304","endLine":49,"endColumn":25},{"ruleId":"301","severity":1,"message":"309","line":53,"column":22,"nodeType":"303","messageId":"304","endLine":53,"endColumn":24},{"ruleId":"301","severity":1,"message":"309","line":57,"column":24,"nodeType":"303","messageId":"304","endLine":57,"endColumn":26},{"ruleId":"301","severity":1,"message":"309","line":61,"column":23,"nodeType":"303","messageId":"304","endLine":61,"endColumn":25},{"ruleId":"301","severity":1,"message":"309","line":65,"column":20,"nodeType":"303","messageId":"304","endLine":65,"endColumn":22},{"ruleId":"301","severity":1,"message":"302","line":69,"column":20,"nodeType":"303","messageId":"304","endLine":69,"endColumn":22},{"ruleId":"301","severity":1,"message":"309","line":84,"column":22,"nodeType":"303","messageId":"304","endLine":84,"endColumn":24},{"ruleId":"301","severity":1,"message":"309","line":104,"column":14,"nodeType":"303","messageId":"304","endLine":104,"endColumn":16},{"ruleId":"350","severity":1,"message":"351","line":163,"column":19,"nodeType":"312","endLine":163,"endColumn":135},{"ruleId":"350","severity":1,"message":"351","line":166,"column":19,"nodeType":"312","endLine":166,"endColumn":186},{"ruleId":"350","severity":1,"message":"351","line":239,"column":126,"nodeType":"312","endLine":239,"endColumn":218},{"ruleId":"305","severity":1,"message":"348","line":20,"column":8,"nodeType":"307","endLine":20,"endColumn":66,"suggestions":"352"},{"ruleId":"301","severity":1,"message":"309","line":30,"column":109,"nodeType":"303","messageId":"304","endLine":30,"endColumn":111},{"ruleId":"301","severity":1,"message":"309","line":52,"column":108,"nodeType":"303","messageId":"304","endLine":52,"endColumn":110},{"ruleId":"301","severity":1,"message":"309","line":62,"column":109,"nodeType":"303","messageId":"304","endLine":62,"endColumn":111},{"ruleId":"313","severity":1,"message":"341","line":4,"column":21,"nodeType":"315","messageId":"316","endLine":4,"endColumn":35},{"ruleId":"305","severity":1,"message":"348","line":12,"column":5,"nodeType":"307","endLine":12,"endColumn":27,"suggestions":"353"},{"ruleId":"301","severity":1,"message":"309","line":47,"column":21,"nodeType":"303","messageId":"304","endLine":47,"endColumn":23},{"ruleId":"301","severity":1,"message":"309","line":47,"column":42,"nodeType":"303","messageId":"304","endLine":47,"endColumn":44},{"ruleId":"301","severity":1,"message":"309","line":47,"column":65,"nodeType":"303","messageId":"304","endLine":47,"endColumn":67},{"ruleId":"301","severity":1,"message":"309","line":47,"column":87,"nodeType":"303","messageId":"304","endLine":47,"endColumn":89},{"ruleId":"301","severity":1,"message":"309","line":47,"column":106,"nodeType":"303","messageId":"304","endLine":47,"endColumn":108},{"ruleId":"301","severity":1,"message":"302","line":47,"column":125,"nodeType":"303","messageId":"304","endLine":47,"endColumn":127},{"ruleId":"301","severity":1,"message":"309","line":48,"column":23,"nodeType":"303","messageId":"304","endLine":48,"endColumn":25},{"ruleId":"301","severity":1,"message":"309","line":52,"column":22,"nodeType":"303","messageId":"304","endLine":52,"endColumn":24},{"ruleId":"301","severity":1,"message":"309","line":56,"column":24,"nodeType":"303","messageId":"304","endLine":56,"endColumn":26},{"ruleId":"301","severity":1,"message":"309","line":60,"column":23,"nodeType":"303","messageId":"304","endLine":60,"endColumn":25},{"ruleId":"301","severity":1,"message":"309","line":64,"column":20,"nodeType":"303","messageId":"304","endLine":64,"endColumn":22},{"ruleId":"301","severity":1,"message":"302","line":68,"column":20,"nodeType":"303","messageId":"304","endLine":68,"endColumn":22},{"ruleId":"301","severity":1,"message":"309","line":83,"column":22,"nodeType":"303","messageId":"304","endLine":83,"endColumn":24},{"ruleId":"301","severity":1,"message":"309","line":103,"column":14,"nodeType":"303","messageId":"304","endLine":103,"endColumn":16},{"ruleId":"350","severity":1,"message":"351","line":162,"column":19,"nodeType":"312","endLine":162,"endColumn":180},{"ruleId":"350","severity":1,"message":"351","line":165,"column":19,"nodeType":"312","endLine":165,"endColumn":141},{"ruleId":"350","severity":1,"message":"351","line":238,"column":126,"nodeType":"312","endLine":238,"endColumn":218},{"ruleId":"305","severity":1,"message":"354","line":14,"column":5,"nodeType":"307","endLine":14,"endColumn":18,"suggestions":"355"},{"ruleId":"310","severity":1,"message":"311","line":42,"column":62,"nodeType":"312","endLine":42,"endColumn":256},{"ruleId":"350","severity":1,"message":"351","line":81,"column":67,"nodeType":"312","endLine":81,"endColumn":153},{"ruleId":"313","severity":1,"message":"356","line":5,"column":8,"nodeType":"315","messageId":"316","endLine":5,"endColumn":14},{"ruleId":"313","severity":1,"message":"357","line":33,"column":11,"nodeType":"315","messageId":"316","endLine":33,"endColumn":22},{"ruleId":"313","severity":1,"message":"322","line":50,"column":15,"nodeType":"315","messageId":"316","endLine":50,"endColumn":21},{"ruleId":"301","severity":1,"message":"309","line":52,"column":30,"nodeType":"303","messageId":"304","endLine":52,"endColumn":32},{"ruleId":"301","severity":1,"message":"309","line":52,"column":54,"nodeType":"303","messageId":"304","endLine":52,"endColumn":56},{"ruleId":"301","severity":1,"message":"309","line":53,"column":30,"nodeType":"303","messageId":"304","endLine":53,"endColumn":32},{"ruleId":"301","severity":1,"message":"309","line":55,"column":33,"nodeType":"303","messageId":"304","endLine":55,"endColumn":35},{"ruleId":"301","severity":1,"message":"309","line":80,"column":14,"nodeType":"303","messageId":"304","endLine":80,"endColumn":16},{"ruleId":"301","severity":1,"message":"309","line":84,"column":19,"nodeType":"303","messageId":"304","endLine":84,"endColumn":21},{"ruleId":"313","severity":1,"message":"358","line":18,"column":7,"nodeType":"315","messageId":"316","endLine":18,"endColumn":21},{"ruleId":"313","severity":1,"message":"359","line":29,"column":10,"nodeType":"315","messageId":"316","endLine":29,"endColumn":14},{"ruleId":"313","severity":1,"message":"325","line":44,"column":10,"nodeType":"315","messageId":"316","endLine":44,"endColumn":12},{"ruleId":"313","severity":1,"message":"360","line":44,"column":13,"nodeType":"315","messageId":"316","endLine":44,"endColumn":18},{"ruleId":"301","severity":1,"message":"309","line":67,"column":40,"nodeType":"303","messageId":"304","endLine":67,"endColumn":42},{"ruleId":"301","severity":1,"message":"309","line":72,"column":42,"nodeType":"303","messageId":"304","endLine":72,"endColumn":44},{"ruleId":"305","severity":1,"message":"320","line":79,"column":5,"nodeType":"307","endLine":79,"endColumn":45,"suggestions":"361"},{"ruleId":"301","severity":1,"message":"309","line":100,"column":22,"nodeType":"303","messageId":"304","endLine":100,"endColumn":24},{"ruleId":"301","severity":1,"message":"309","line":156,"column":12,"nodeType":"303","messageId":"304","endLine":156,"endColumn":14},{"ruleId":"301","severity":1,"message":"309","line":161,"column":17,"nodeType":"303","messageId":"304","endLine":161,"endColumn":19},{"ruleId":"301","severity":1,"message":"309","line":165,"column":17,"nodeType":"303","messageId":"304","endLine":165,"endColumn":19},{"ruleId":"301","severity":1,"message":"309","line":227,"column":93,"nodeType":"303","messageId":"304","endLine":227,"endColumn":95},{"ruleId":"301","severity":1,"message":"309","line":233,"column":58,"nodeType":"303","messageId":"304","endLine":233,"endColumn":60},{"ruleId":"310","severity":1,"message":"311","line":242,"column":31,"nodeType":"312","endLine":242,"endColumn":113},{"ruleId":"310","severity":1,"message":"311","line":363,"column":33,"nodeType":"312","endLine":363,"endColumn":112},{"ruleId":"301","severity":1,"message":"309","line":370,"column":89,"nodeType":"303","messageId":"304","endLine":370,"endColumn":91},{"ruleId":"301","severity":1,"message":"309","line":376,"column":95,"nodeType":"303","messageId":"304","endLine":376,"endColumn":97},{"ruleId":"297","severity":1,"message":"298","line":89,"column":32,"nodeType":"299","messageId":"300","endLine":89,"endColumn":34},{"ruleId":"305","severity":1,"message":"348","line":12,"column":7,"nodeType":"307","endLine":12,"endColumn":43,"suggestions":"362"},{"ruleId":"301","severity":1,"message":"309","line":25,"column":9,"nodeType":"303","messageId":"304","endLine":25,"endColumn":11},{"ruleId":"301","severity":1,"message":"302","line":29,"column":20,"nodeType":"303","messageId":"304","endLine":29,"endColumn":22},{"ruleId":"301","severity":1,"message":"309","line":43,"column":43,"nodeType":"303","messageId":"304","endLine":43,"endColumn":45},{"ruleId":"301","severity":1,"message":"309","line":107,"column":26,"nodeType":"303","messageId":"304","endLine":107,"endColumn":28},{"ruleId":"305","severity":1,"message":"348","line":12,"column":7,"nodeType":"307","endLine":12,"endColumn":46,"suggestions":"363"},{"ruleId":"301","severity":1,"message":"309","line":25,"column":9,"nodeType":"303","messageId":"304","endLine":25,"endColumn":11},{"ruleId":"301","severity":1,"message":"309","line":41,"column":43,"nodeType":"303","messageId":"304","endLine":41,"endColumn":45},{"ruleId":"301","severity":1,"message":"309","line":105,"column":26,"nodeType":"303","messageId":"304","endLine":105,"endColumn":28},{"ruleId":"313","severity":1,"message":"364","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":26},{"ruleId":"313","severity":1,"message":"327","line":4,"column":11,"nodeType":"315","messageId":"316","endLine":4,"endColumn":14},{"ruleId":"313","severity":1,"message":"328","line":4,"column":16,"nodeType":"315","messageId":"316","endLine":4,"endColumn":19},{"ruleId":"313","severity":1,"message":"330","line":4,"column":26,"nodeType":"315","messageId":"316","endLine":4,"endColumn":35},{"ruleId":"305","severity":1,"message":"348","line":12,"column":5,"nodeType":"307","endLine":12,"endColumn":33,"suggestions":"365"},{"ruleId":"313","severity":1,"message":"364","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":26},{"ruleId":"313","severity":1,"message":"366","line":1,"column":28,"nodeType":"315","messageId":"316","endLine":1,"endColumn":37},{"ruleId":"313","severity":1,"message":"327","line":4,"column":11,"nodeType":"315","messageId":"316","endLine":4,"endColumn":14},{"ruleId":"313","severity":1,"message":"328","line":4,"column":16,"nodeType":"315","messageId":"316","endLine":4,"endColumn":19},{"ruleId":"313","severity":1,"message":"330","line":4,"column":26,"nodeType":"315","messageId":"316","endLine":4,"endColumn":35},{"ruleId":"313","severity":1,"message":"364","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":26},{"ruleId":"313","severity":1,"message":"366","line":1,"column":28,"nodeType":"315","messageId":"316","endLine":1,"endColumn":37},{"ruleId":"313","severity":1,"message":"327","line":4,"column":11,"nodeType":"315","messageId":"316","endLine":4,"endColumn":14},{"ruleId":"313","severity":1,"message":"328","line":4,"column":16,"nodeType":"315","messageId":"316","endLine":4,"endColumn":19},{"ruleId":"313","severity":1,"message":"330","line":4,"column":26,"nodeType":"315","messageId":"316","endLine":4,"endColumn":35},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.","ArrayExpression",["369"],"Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'BiPlusMedical' is defined but never used.","'BiSearch' is defined but never used.","'FiAlignJustify' is defined but never used.","React Hook useEffect has missing dependencies: 'obj' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["370"],"'values' is assigned a value but never used.",["367"],["368"],"'op' is assigned a value but never used.",["371"],"'Row' is defined but never used.","'Col' is defined but never used.","'Modal' is defined but never used.","'CardGroup' is defined but never used.","'Space' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'show' is assigned a value but never used.","'ids' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'deleteHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["372"],"'fetchusersdata' is defined but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBBtn' is defined but never used.","'MDBCard' is defined but never used.","'MDBInput' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["373"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["374"],["375"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["376"],"'moment' is defined but never used.","'RangePicker' is assigned a value but never used.","'formTailLayout' is assigned a value but never used.","'form' is assigned a value but never used.","'setOp' is assigned a value but never used.",["377"],["378"],["379"],"'Component' is defined but never used.",["380"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"389","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},"Update the dependencies array to be: [active, props.err]",{"range":"404","text":"405"},"Update the dependencies array to be: [obj, props, props.fetchstatedata, props.singlestate]",{"range":"406","text":"407"},"Update the dependencies array to be: [obj, props, props.fetchcitiesdata, props.fetchstatedata, props.singlecities]",{"range":"408","text":"409"},"Update the dependencies array to be: [form, props, props.fetchstatedata]",{"range":"410","text":"411"},"Update the dependencies array to be: [props, props.fetchstatedata]",{"range":"412","text":"413"},"Update the dependencies array to be: [props.location.pathname, props.autoCheckLogin, props.token, props]",{"range":"414","text":"415"},{"range":"416","text":"413"},"Update the dependencies array to be: [props.history, props.token]",{"range":"417","text":"418"},"Update the dependencies array to be: [obj, props, props.fetchmoviedata, props.singlemovie]",{"range":"419","text":"420"},"Update the dependencies array to be: [props, props.getAllUser, props.singleuser1]",{"range":"421","text":"422"},"Update the dependencies array to be: [props, props.getAllTheater, props.singleuser1]",{"range":"423","text":"424"},"Update the dependencies array to be: [props, props.fetchDashboradRecord]",{"range":"425","text":"426"},[1125,1136],"[active, props.err]",[1065,1105],"[obj, props, props.fetchstatedata, props.singlestate]",[1372,1436],"[obj, props, props.fetchcitiesdata, props.fetchstatedata, props.singlecities]",[1453,1475],"[form, props, props.fetchstatedata]",[549,571],"[props, props.fetchstatedata]",[868,926],"[props.location.pathname, props.autoCheckLogin, props.token, props]",[464,486],[430,443],"[props.history, props.token]",[2415,2455],"[obj, props, props.fetchmoviedata, props.singlemovie]",[446,482],"[props, props.getAllUser, props.singleuser1]",[452,491],"[props, props.getAllTheater, props.singleuser1]",[498,526],"[props, props.fetchDashboradRecord]"]